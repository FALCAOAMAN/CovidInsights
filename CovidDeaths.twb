<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidVaccinations' path='/t/amankumartableau/workbooks' revision='1.0' site='amankumartableau' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
    </datasource>
    <datasource caption='CovidProject' inline='true' name='federated.17acew21lmcjtv119e2ek1nnkcxm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-3H2Q7DIH\SQLEXPRESS' name='sqlserver.1304j1i12797vr1bqb4z71w71kxe'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-3H2Q7DIH\SQLEXPRESS' sslmode='require' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe' name='death_count_per_continent' table='[dbo].[death_count_per_continent]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe' name='death_count_per_continent' table='[dbo].[death_count_per_continent]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[death_count_per_continent]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_count_per_continent_4C271E80F1E64EA38BA10FAA7A214A71]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[death_count_per_continent]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_count_per_continent_4C271E80F1E64EA38BA10FAA7A214A71]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_death_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[highest_death_count]</local-name>
            <parent-name>[death_count_per_continent]</parent-name>
            <remote-alias>highest_death_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_count_per_continent_4C271E80F1E64EA38BA10FAA7A214A71]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_percentage_death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_percentage_death]</local-name>
            <parent-name>[death_count_per_continent]</parent-name>
            <remote-alias>max_percentage_death</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_count_per_continent_4C271E80F1E64EA38BA10FAA7A214A71]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='death_count_per_continent' datatype='table' name='[__tableau_internal_object_id__].[death_count_per_continent_4C271E80F1E64EA38BA10FAA7A214A71]' role='measure' type='quantitative' />
      <column caption='Highest Death Count' datatype='integer' name='[highest_death_count]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Max Percentage Death' datatype='real' name='[max_percentage_death]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='death_count_per_continent' id='death_count_per_continent_4C271E80F1E64EA38BA10FAA7A214A71'>
            <properties context=''>
              <relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe' name='death_count_per_continent' table='[dbo].[death_count_per_continent]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CovidProject (copy 2)' inline='true' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-3H2Q7DIH\SQLEXPRESS' name='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 2)'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-3H2Q7DIH\SQLEXPRESS' sslmode='require' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 2)' name='Death_percentage' table='[dbo].[Death_percentage]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 2)' name='Death_percentage' table='[dbo].[Death_percentage]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Death_percentage]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Death_percentage_F75CE22913C049F7A0FCC1A1A14FF73E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Death_percentage]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Death_percentage_F75CE22913C049F7A0FCC1A1A14FF73E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[Death_percentage]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Death_percentage_F75CE22913C049F7A0FCC1A1A14FF73E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Death_percentage' datatype='table' name='[__tableau_internal_object_id__].[Death_percentage_F75CE22913C049F7A0FCC1A1A14FF73E]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Death_percentage' id='Death_percentage_F75CE22913C049F7A0FCC1A1A14FF73E'>
            <properties context=''>
              <relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 2)' name='Death_percentage' table='[dbo].[Death_percentage]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CovidProject (copy 3)' inline='true' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-3H2Q7DIH\SQLEXPRESS' name='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 3)'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-3H2Q7DIH\SQLEXPRESS' sslmode='require' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 3)' name='Percentage_Population_infected' table='[dbo].[Percentage_Population_infected]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 3)' name='Percentage_Population_infected' table='[dbo].[Percentage_Population_infected]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Percentage_Population_infected]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Population_infected_C193AF7F41B54CBA9B6F36D30BB22558]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Percentage_Population_infected]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Population_infected_C193AF7F41B54CBA9B6F36D30BB22558]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Percentage_Population_infected]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Population_infected_C193AF7F41B54CBA9B6F36D30BB22558]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Percentage_Population_infected]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Population_infected_C193AF7F41B54CBA9B6F36D30BB22558]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_population_infected]</local-name>
            <parent-name>[Percentage_Population_infected]</parent-name>
            <remote-alias>percent_population_infected</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Population_infected_C193AF7F41B54CBA9B6F36D30BB22558]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Percentage_Population_infected' datatype='table' name='[__tableau_internal_object_id__].[Percentage_Population_infected_C193AF7F41B54CBA9B6F36D30BB22558]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='real' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[percent_population_infected]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Percentage_Population_infected' id='Percentage_Population_infected_C193AF7F41B54CBA9B6F36D30BB22558'>
            <properties context=''>
              <relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 3)' name='Percentage_Population_infected' table='[dbo].[Percentage_Population_infected]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CovidProject (copy 4)' inline='true' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-3H2Q7DIH\SQLEXPRESS' name='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 4)'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-3H2Q7DIH\SQLEXPRESS' sslmode='require' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 4)' name='Vacc_per_Population' table='[dbo].[Vacc_per_Population]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 4)' name='Vacc_per_Population' table='[dbo].[Vacc_per_Population]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Vacc_per_Population]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vacc_per_Population_A8A72527FA374BDA96E9AD6E99706ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Vacc_per_Population]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vacc_per_Population_A8A72527FA374BDA96E9AD6E99706ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Vacc_per_Population]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vacc_per_Population_A8A72527FA374BDA96E9AD6E99706ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Vacc_per_Population]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vacc_per_Population_A8A72527FA374BDA96E9AD6E99706ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Vacc_per_Population]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vacc_per_Population_A8A72527FA374BDA96E9AD6E99706ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rolling_vaccinations</remote-name>
            <remote-type>3</remote-type>
            <local-name>[rolling_vaccinations]</local-name>
            <parent-name>[Vacc_per_Population]</parent-name>
            <remote-alias>rolling_vaccinations</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Vacc_per_Population_A8A72527FA374BDA96E9AD6E99706ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Vacc_per_Population' datatype='table' name='[__tableau_internal_object_id__].[Vacc_per_Population_A8A72527FA374BDA96E9AD6E99706ABF]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='New Vaccinations' datatype='string' name='[new_vaccinations]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Rolling Vaccinations' datatype='integer' name='[rolling_vaccinations]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Vacc_per_Population' id='Vacc_per_Population_A8A72527FA374BDA96E9AD6E99706ABF'>
            <properties context=''>
              <relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 4)' name='Vacc_per_Population' table='[dbo].[Vacc_per_Population]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CovidProject (copy)' inline='true' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-3H2Q7DIH\SQLEXPRESS' name='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy)'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-3H2Q7DIH\SQLEXPRESS' sslmode='require' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy)' name='death_count_per_contry' table='[dbo].[death_count_per_contry]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy)' name='death_count_per_contry' table='[dbo].[death_count_per_contry]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[death_count_per_contry]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_count_per_contry_33A3A09B71774645B8501A8047727879]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[death_count_per_contry]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_count_per_contry_33A3A09B71774645B8501A8047727879]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_death_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[highest_death_count]</local-name>
            <parent-name>[death_count_per_contry]</parent-name>
            <remote-alias>highest_death_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_count_per_contry_33A3A09B71774645B8501A8047727879]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_percentage_death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[max_percentage_death]</local-name>
            <parent-name>[death_count_per_contry]</parent-name>
            <remote-alias>max_percentage_death</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_count_per_contry_33A3A09B71774645B8501A8047727879]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='death_count_per_contry' datatype='table' name='[__tableau_internal_object_id__].[death_count_per_contry_33A3A09B71774645B8501A8047727879]' role='measure' type='quantitative' />
      <column caption='Highest Death Count' datatype='integer' name='[highest_death_count]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Max Percentage Death' datatype='real' name='[max_percentage_death]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='death_count_per_contry' id='death_count_per_contry_33A3A09B71774645B8501A8047727879'>
            <properties context=''>
              <relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy)' name='death_count_per_contry' table='[dbo].[death_count_per_contry]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='CovidProject (copy 5)' inline='true' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-3H2Q7DIH\SQLEXPRESS' name='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 5)'>
            <connection authentication='sspi' class='sqlserver' dbname='CovidProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-3H2Q7DIH\SQLEXPRESS' sslmode='require' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 5)' name='Percentage_Vaccinated' table='[dbo].[Percentage_Vaccinated]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 5)' name='Percentage_Vaccinated' table='[dbo].[Percentage_Vaccinated]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Percentage_Vaccinated]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='0' name='LROOT' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Vaccinated_4416DD84AFDF4FFEB10A800B414A0152]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Percentage_Vaccinated]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Vaccinated_4416DD84AFDF4FFEB10A800B414A0152]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maximum_vaccination</remote-name>
            <remote-type>3</remote-type>
            <local-name>[maximum_vaccination]</local-name>
            <parent-name>[Percentage_Vaccinated]</parent-name>
            <remote-alias>maximum_vaccination</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Vaccinated_4416DD84AFDF4FFEB10A800B414A0152]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_vaccinated]</local-name>
            <parent-name>[Percentage_Vaccinated]</parent-name>
            <remote-alias>percentage_vaccinated</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Percentage_Vaccinated_4416DD84AFDF4FFEB10A800B414A0152]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Percentage_Vaccinated' datatype='table' name='[__tableau_internal_object_id__].[Percentage_Vaccinated_4416DD84AFDF4FFEB10A800B414A0152]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Maximum Vaccination' datatype='integer' name='[maximum_vaccination]' role='measure' type='quantitative' />
      <column caption='Percentage Vaccinated' datatype='real' name='[percentage_vaccinated]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Percentage_Vaccinated' id='Percentage_Vaccinated_4416DD84AFDF4FFEB10A800B414A0152'>
            <properties context=''>
              <relation connection='sqlserver.1304j1i12797vr1bqb4z71w71kxe (copy 5)' name='Percentage_Vaccinated' table='[dbo].[Percentage_Vaccinated]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_C76256E8DA8348DEAF2753E4FE5D9802]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 5' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Sheet 5' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Global'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidProject (copy 2)' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)'>
            <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[death_percentage]' derivation='Sum' name='[sum:death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[sum:death_percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[sum:death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='49' />
            <format attr='width' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[:Measure Names]' value='118' />
            <format attr='text-format' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[sum:death_percentage:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[:Measure Names]' value='48' />
            <format attr='background-color' scope='cols' value='#b390ff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#fee9ff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{00691F5C-5749-4F39-825F-ABB2D8C842CA}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>PopulationPer Death</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidProject' name='federated.17acew21lmcjtv119e2ek1nnkcxm' />
          </datasources>
          <datasource-dependencies datasource='federated.17acew21lmcjtv119e2ek1nnkcxm'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Max Percentage Death' datatype='real' name='[max_percentage_death]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[max_percentage_death]' derivation='Sum' name='[sum:max_percentage_death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17acew21lmcjtv119e2ek1nnkcxm].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.17acew21lmcjtv119e2ek1nnkcxm].[sum:max_percentage_death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm].[sum:max_percentage_death:qk]</column>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17acew21lmcjtv119e2ek1nnkcxm].[sum:population:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17acew21lmcjtv119e2ek1nnkcxm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17acew21lmcjtv119e2ek1nnkcxm].[sum:max_percentage_death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.17acew21lmcjtv119e2ek1nnkcxm].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17acew21lmcjtv119e2ek1nnkcxm].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.17acew21lmcjtv119e2ek1nnkcxm].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.17acew21lmcjtv119e2ek1nnkcxm].[sum:max_percentage_death:qk] + [federated.17acew21lmcjtv119e2ek1nnkcxm].[sum:population:qk])</rows>
        <cols>[federated.17acew21lmcjtv119e2ek1nnkcxm].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{1D478A8F-4E18-417B-BB32-CE2998384216}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>MaxDeath</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidProject (copy)' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17acew21lmcjtv119e2ek1nnkcxm (copy)'>
            <column caption='Highest Death Count' datatype='integer' name='[highest_death_count]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Max Percentage Death' datatype='real' name='[max_percentage_death]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[highest_death_count]' derivation='Sum' name='[sum:highest_death_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[max_percentage_death]' derivation='Sum' name='[sum:max_percentage_death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[Latitude (generated)]</column>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[sum:highest_death_count:qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[sum:highest_death_count:qk]' />
              <lod column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[none:location:nk]' />
              <lod column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[sum:max_percentage_death:qk]' />
              <lod column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[sum:population:qk]' />
              <geometry column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[Latitude (generated)]</rows>
        <cols>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6C699609-48B4-48F4-AE9C-94796660172A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>InfectionPerMonth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidProject (copy 3)' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)'>
            <column-instance column='[percent_population_infected]' derivation='Avg' name='[avg:percent_population_infected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[percent_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[percent_population_infected]' derivation='Sum' name='[sum:percent_population_infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[sum:percent_population_infected:qk]' included-values='non-null' />
          <slices>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[none:location:nk]</column>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[sum:percent_population_infected:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[none:location:nk]' />
              <text column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[avg:percent_population_infected:qk]</rows>
        <cols>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{61926B79-0FE6-42E4-B29F-5C72574AEF33}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vaccinations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidProject (copy 4)' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)'>
            <column-instance column='[rolling_vaccinations]' derivation='Avg' name='[avg:rolling_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Rolling Vaccinations' datatype='integer' name='[rolling_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[avg:rolling_vaccinations:qk]' included-values='in-range'>
            <min>637.0</min>
            <max>1796430612.9032259</max>
          </filter>
          <filter class='categorical' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[avg:rolling_vaccinations:qk]</column>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:location:nk]' />
              <text column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[avg:rolling_vaccinations:qk]</rows>
        <cols>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{102B9D2D-A675-4471-9212-18FAD75DF4CB}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Vaccinated</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidProject (copy 5)' name='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Maximum Vaccination' datatype='integer' name='[maximum_vaccination]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage Vaccinated' datatype='real' name='[percentage_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[maximum_vaccination]' derivation='Sum' name='[sum:maximum_vaccination:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percentage_vaccinated]' derivation='Sum' name='[sum:percentage_vaccinated:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Latitude (generated)]</column>
            <column>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Longitude (generated)]' field-type='quantitative' max='65501626.045757279' min='23519029.062752038' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Latitude (generated)]' field-type='quantitative' max='14117225.478817863' min='-11103090.191401402' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[sum:percentage_vaccinated:qk]' />
              <lod column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[none:location:nk]' />
              <lod column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[sum:maximum_vaccination:qk]' />
              <geometry column='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Latitude (generated)]</rows>
        <cols>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A28B493E-1758-4F7B-AD5B-DB0A1AA4C643}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CovidDeaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='30' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone h='5469' id='31' type-v2='title' w='98438' x='781' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92447' id='28' param='horz' type-v2='layout-flow' w='98438' x='781' y='6511'>
              <zone h='92447' id='22' type-v2='layout-basic' w='98438' x='781' y='6511'>
                <zone h='92447' id='20' param='horz' type-v2='layout-flow' w='49219' x='781' y='6511'>
                  <zone fixed-size='492' h='92447' id='16' is-fixed='true' type-v2='layout-basic' w='49219' x='781' y='6511'>
                    <zone h='92447' id='17' param='vert' type-v2='layout-flow' w='49219' x='781' y='6511'>
                      <zone fixed-size='141' h='19401' id='15' is-fixed='true' name='Global' w='49219' x='781' y='6511'>
                        <layout-cache type-h='fixed' type-w='fixed' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='73046' id='18' name='Sheet 2' w='49219' x='781' y='25912'>
                        <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='46223' id='21' name='Sheet 1' w='49219' x='50000' y='6511'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46224' id='26' name='Sheet 4' w='49219' x='50000' y='52734'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>CovidDeaths</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='38' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone h='5469' id='31' type-v2='title' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='141' h='19401' id='15' is-fixed='true' name='Global' w='49219' x='781' y='6511'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46223' id='21' is-fixed='true' name='Sheet 1' w='49219' x='50000' y='6511'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73046' id='18' is-fixed='true' name='Sheet 2' w='49219' x='781' y='25912'>
                  <layout-cache minheight='244' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46224' id='26' is-fixed='true' name='Sheet 4' w='49219' x='50000' y='52734'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8A1094A6-00A5-4C2C-AE33-43409494EE19}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CovidVaccinations</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#eef1f3' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='color' value='#000000' />
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#e2e6f0' />
          <format attr='border-style' value='dotted' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98306' id='13' param='vert' type-v2='layout-flow' w='99064' x='468' y='847'>
            <zone h='4449' id='14' type-v2='title' w='99064' x='468' y='847'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93857' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='5296'>
              <zone h='93857' id='5' type-v2='layout-basic' w='89702' x='468' y='5296'>
                <zone h='93857' id='3' name='Sheet 6' w='44851' x='468' y='5296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='93857' id='9' name='Sheet 5' w='44851' x='45319' y='5296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='93857' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='5296'>
                <zone fixed-size='101' h='11546' id='8' is-fixed='true' name='Sheet 6' pane-specification-id='0' param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[sum:percentage_vaccinated:qk]' type-v2='color' w='9362' x='90170' y='5296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='15466' id='11' name='Sheet 5' pane-specification-id='0' param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:location:nk]' type-v2='color' w='9362' x='90170' y='16842'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>CovidVaccinations</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98306' id='17' param='vert' type-v2='layout-flow' w='99064' x='468' y='847'>
                <zone h='4449' id='14' type-v2='title' w='99064' x='468' y='847'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='93857' id='3' is-fixed='true' name='Sheet 6' w='44851' x='468' y='5296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='101' h='11546' id='8' name='Sheet 6' pane-specification-id='0' param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[sum:percentage_vaccinated:qk]' type-v2='color' w='9362' x='90170' y='5296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='93857' id='9' is-fixed='true' name='Sheet 5' w='44851' x='45319' y='5296'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15466' id='11' name='Sheet 5' pane-specification-id='0' param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:location:nk]' type-v2='color' w='9362' x='90170' y='16842'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5C377D7F-7DF6-4051-A705-13064AD53E9B}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.17acew21lmcjtv119e2ek1nnkcxm].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03732BB4-D873-4BE7-B067-9EF3C13DE017}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[sum:highest_death_count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy)].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFED071C-A93E-4EE7-AEB7-BDB6FE800F2C}' />
    </window>
    <window class='worksheet' name='Global'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 2)].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6097AC35-EFA2-44F9-A51F-C29A2DF927A0}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[none:location:nk]</field>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E2FB02C-6614-40CB-AD1B-B96144742654}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Global'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight field='[federated.17acew21lmcjtv119e2ek1nnkcxm].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 3)].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B02BBC3D-0E03-4486-91BD-AEBD25596A3D}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[none:new_vaccinations:nk]</field>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[tmn:date:ok]</field>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 4)].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C02023D7-AEC4-40ED-9713-ECEB3FAC61E1}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[sum:percentage_vaccinated:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17acew21lmcjtv119e2ek1nnkcxm (copy 5)].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CBBA747-F87F-499B-ADAD-EDFC921013FE}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{A9216DED-73E4-459A-9298-FB88CCA1CC13}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      NA0FaLCj+f/tn4QVa+f+kQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='101' name='Global' width='192'>
      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
      Wo22AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z5BkV3bf+bvPpPeZleV9m2qL7kajGxgAMwMOxoLkkDMUhyIZokiRopZS
      bFDSrhj8sBETsbGfNkJLbmyQq1mJIinO0A0txmEMBgMPNNr7ruryPiu9ffnM3Q9Z3nVVdzXQ
      I+FfUZGZL9+7976X55x77nFXfO12SqZMhf8R4VUFUU1h2rDxq4KyLXfdhqwUUEpZOsjgj4a5
      pfcBEMsO0hWwGKwGKYc6Vi6wLR6rXuOqtg/HE9i63ewcWAaKoiLj7ajFFD+/v86LQ4KSN8nJ
      2jUG+hK89M445arFC092Uq/XmZvLc/RoL6l0ke/Oh6j7E2sbzs6ilDKNoYSTqJUcmgLH45IT
      +5p2ff8fBG6NzPOa0YFweUGIB2pL/P61tJw01T0a2qMPvypo0lVmDIugpuBWBHN1G2v3tI+o
      V/iF4CADPTHS6QLfGHK4GzqCzM0jIg1iEsrGZ7u/cI10tkSm+8kt23amBhFNnQiXp3GglKMj
      d4PZxFHMukli9hK/+alu3B4dw6jj83m4emUUw7C5ObLAWGSAWvvRDe1K20aUMpzQ57DrdY7H
      LI4c7lm6o90/hPcdEsuyuTE8x+UZi5vx0w/UmrZHo3rkoAJNLgXDgZzl0OpSSZk2uhCYUiKB
      BdO57/allBy3hjmyL45AIRINMFcugKfaEEpCQSxKJ1krg9u3/HkweATpNTclN2kaBMYu8FMD
      OlcyVe5WExjhNghEmPA/ha+S4p/3LNDz5MFF6Sfw+XTA4djxHqQjGDjczVe+PYjH6yEX27em
      faGquKXBk20K8WgCv98L3Af3fwCQsjHOWyNztCdDFM0iNx9w6P/dMoBfFeQsh7C2qN4JcCuN
      Y1UH6g/44KKpm3zylBvTtPjOK7f4qeePEQu6oDRLUi0zIlqWz22pjCGKNrNNx4AGuSmlDE6k
      GaTEM3GFatVA+iMoLb3YRo2+jmaOHfRwdzzNf57QCFhForUU3Vqe/JwXWsLUDRuXW6NULJPL
      lcgXyhw53EfA5+E3PrOP7w4aXNxk7LVwO1+5Y/FUIEV7UOH4wTYU5dFXgwfvTDM0leN1/wnE
      ZAF/XYH2B2tT/exv/c6XC86jf/NbwasILNl49SpimbAlENAUVAElW2I4ktqiwL8PVX8FUuLJ
      TfDF3hrtzUFuDc0zU9O5OllhQm1mnyvLba0HdDcAWjHFz3YWSFckC+5FpnBsPimuUisWqdQd
      vAvD/PozEbT5EYK1BaYCvZTGhjnUG2dhboFnWkweCxtcuTpM3lQpzM8zM5dlanqBes3k22+P
      UizWGM85ZKqSnmY/L74xylW1F+nybbgFIQSOy0s9NcXxVg/RSGBltpIS07RQ1UdPLdZ0hdfm
      NXKmjksT2EYNJ5x8oDZ/bBmg1aVQtSV+VaHmSGK6QnaVIm8DmoCCLXEWP+8Jiml+sz+D36WS
      ShV47do8Q6Ej5PDRW7zBU10aZj6LapQoeeKoVo0BX5mIy+am1YwQAqEo1GcnOBookJ9P0590
      c/3aKF/6/GkM0+K2ez+zdpDr14a5Wg7R4nPwaxDxKkyafkb7PsWYq5MRrYPRvGQ2fpjJyCFS
      wR7K43e5mbK44T2IDMS2vA2haghF4ekOlfn5HO/cTmEZNb7xxl2+M+VmIVMkoJiEg969enIP
      DI/HhajkaVcqjJh+rHwG4g82BTyyDBDXlQbhSoguqjEeRRDSFCqOJKAKirYkpArKjsStCDyK
      oOasMEFdwv1r+ZvDKeeZuTPIpZvTKNLiku8YvaVbZCoOP3vETSDg48zBOD1eg0ujRYxgM+78
      NAcSKlevjnDWO8Os6aVUh+rN81TKNT55uo1aqUx/fyupdIkbTjuyblDJZTF6TlLKFTjZpvPN
      l6+T7X8WxxNA6C6Ey4PhiyFcHoSigBCUIl3kHS/a9G2ceMe291J3Bzk3UWVyNsdVrYebJR/z
      zcexgk1M60kuz9YpTk/S1+xHVR8FGpG0NQVRHYMLOS+WqqMEow/U4iPLAEFN4BaCiiMJa4K8
      JYnqCiXbwZKgC4EjJVWnIeGrjlxD/A8LwhukEO2lpAUY8/RyUp/GcocIiSr+eoFQ0E8g4MXt
      UinPTDLp7aZUKHOyyWYgatPd5GEyXSMb20fdho/2qHg9Lrw+N8lkhJlUievjRZRwAlFIQbSV
      vHRzVJvjkx87QnnkNhNWCFQNhAK5OU47gwwo8zzjnWJ0ZBrDG8UOJREu9z3vx/EEKQXbEB5/
      g7FWmRUdT5AJ08/M4BBHuyMoygdrJTJNm3K5SrIpzNhMlmz8wAO3+Ugugt2iodNLABOMRTG+
      YDp4FQFIstZey/adQygqItkNUnKtUMfWPBx3LqB5PcTiAa5eucux4708cyRB19x7FGICj9tP
      a0sbpmmRHVLw5yeptB/m5fwMlSt5zrjSHDvay8jQFPp0nYPGHV54boCv3JjCltDaEkNVVfoT
      Lpoq13FMybnhOl84naCjo3nRHC440Gfzl6/e5Fr87N7cqz/MbQZIZxZobgrvSZv3C13XOHdu
      mOPH+2lyW9zJzEIojtD0+27zkWQACYzX7GXjXG6R2G3ZWNA+MhACK9yCUs4QiQRwqybnLw0z
      OV9meP4GgYCXkwcSxKIhbMdGSsncQpmyHeGXWqf5s3SAevN+1EiFDlEFKSgrXpz+Y3z8SI1o
      JMAJX4orBT9SNn6qw4e6lrt/6nG5SmI3XlVVpafZzzXToWEMfnBIVadk2DTvSWsPMA4pOX16
      gP/vu3cxhM5zkSyvpLuguee+23wkGeBBTZTvNxx/jFfkE+ipCVAUTL3Cs7EiXQkdR8K3LqW5
      nlYJe2DGCSHj7Xx1wY0IL3ppXV5+kGnnpZfLGPEnwKwxODZFS1OIgAtyniayuUk8bgOv1002
      W6S1Nb5M/JZlk04XaG6OUq9b3LgyCAf2wwNIxtUQHj9fnwzyJTVPT+sHPwt0a0XOhU5z0Syh
      u3TMB2jvkWSARx3SqIJpIAKR5WNCCKxEF0olz7/qz9DZlmQ6VeK/3nSTixxCtAryS+cChJvW
      XFuO9yEdB5mZQfhCfH82xNi7OaqOBuEgf3q+zEAM3E6Nmunw2ViIubksd+9OcehwD69enOKT
      Z3XG5krMtp1GuDeaPx8E+UAbb4zdpLtFrlknfBDoao9y++5tFpoOrwiR+8T/cKEQ9wvp2PRk
      rjAQc+iJadRR+avhAKVACxQWIN6+TBiewgwhu8iclkAEtzZFbuijWgbpILwBpGUiVA1WOaik
      lOA4yGIaUS0hNRfC4wNFA68filkIRjcNv9gLJFM3+TfPRtC0D0ZuSulg2xY3bo6Rqql8Xz+J
      0FwP1OaHM8AOIRSV5qDCs8dWJM5vxwzeu/g6Z57cx9cv3+Sm/zAAtVArNVp3FVkjrTp+I4O3
      liHtewwhBIeqN+kNWIzkBRN1LyXHhYy2oESSEElubP8BpeG247Nt5tN5FjIaLcnIvS/Y+xGQ
      L5T5429ew247wEKk/4EWv0t4ZM2gjxqkdMjNzHG2S1/2kuq6RndnAk3TOJR0MTKWIu/aXOI3
      4lgkgdwYsfoCJVcYIRrPPZG5wxPli0TSQxxpVpnNWzhGhedjaR4/1MbRdi8f7XVRS6eYcHWA
      Y9OaH+Ssawq9vMCCqwmttECoMIllGLirWep1C2BPiARAKApCUegSOVqbQnvS5k7Q8EybDI7O
      09YS4dRAkrmpOWZ83Xuiin1I+TuEEArtnjq6a/NJ06WrPNtUQZayy0Fba1CvIicH+clkhv/p
      jJtQfgIAaVt0V0c4eaSDn/nZp+lojVK0FNr1Kvv3tQKgKIJyxeC9WhKQPG7d5t88HeDs/jDZ
      uk5i/F1+s3uOf/9RL4cKl/kPZwW/czjDrybuohfn9+wZONFWRipuLGvP/OpbQkqJ4zg4jsP3
      X7nMD4eqVGsGN8dzpAju2TrkQwbYIaRp8ES3i42RkwLHlnz/wjSvD+b59fYpwvmxFSZYfNVz
      M3wmNs+t4QUW0kVKir/xXa3MeddhLl8dRTqS7921UKt5CmUDTVv5ed4ezGNE2nBnp/jUfg9C
      CF6/naM+P8mTkTxN8QCKohKP+LgxnCISCbC/O87zwRmk/SB2klV3KgR3iur7tAiW2LbFa69d
      IhbycCrp8H++WuGv8/1MxI7tWS8frgF2CLWSI9y6/nEJyhWTv3l7llPdHj5xqhfbcvBeHOXZ
      cJq38zGcQhqXSyMrQjzzeC+WZfOH37iNHDgMlTw/H7jN1wtRvD435XKNk5EKU4PzRA8ewDBM
      bt+dIRrycqEYRkQVurU8wWAMy7K5nNY5Fq0TiQRBSMDh6IEk37+SwVHmGZ2v4pF1hF6AYHxP
      nkNdDfDq+WGeO9PPw80fEEgJPp+X92YksdoopyNh3q7FkW7/nvXyIQPsEDE7T1syuPagFHzt
      nQxP9QY52hsGBPOpHE93azx+tBXv9Ql+lLX50lEf/+XVcTK5VpriQZo720gB0u1n3vTw7045
      RCIDKIrC0aPdZEt1fmBGKZYK3Cm6uFjth4gXbJPD0RX1w6UpNCUSHDiQRF2cLUqFCjcrAe7M
      JfmV7gVMy8fE2Bjjbv9Kcs0DwJWfItknkUjEQ2QAIQSapnHwYBdVZR536DEKcykc9cGsPuvx
      oQq0Ezg2TycrGwTeKxenmdRbEVZ96URaW2M8frwHgH1dcX7rkx00JyM0N0dJ5WsA9AXqICVC
      1XjN6OR7t0pYi95uRaj4Aj5sX4RstkjK9iI8i8k0lkVEbzCApqmEzSxvXk9RLFYAkI5kcCRF
      +/wlklf+ganhSdrjPn7lqRiuyet78iiKVROv98EZaTtIKZFSoigKoZCPQ91RRuerDOck8gHN
      nuvxIQPsAFJKLs5K8oUaS1xgW/B2Kc5+PcuR/auDBAQN+WgTCLpxLS6ae71Vbs43iLc96mlk
      iQGOP8rl4AlevlXAsmwK+TLpbAXqNd546zYTzipnm2UQCa84uCKaySdPt1CuGAhUFEWjpz3K
      r/3isxw/2gVIQiE/HreLn+yuI4uZB34WsZYk3d3NpBcKy4T6MHDu3A1SqSwgaEpE+OKTrRjR
      DthjB99DM4OKhXHazFEqdZDurZO/fxwgFIW8r5VLYxVOxQw0VSeVLvBWPkLZlBTu3ibs9zA0
      OEVLS4yVIGyxrCbEAzrNfggGvAQDbgZHFyh4GnZ7IRQmqjp9zizfuZzhqr6fDmeef/oTvdQz
      C0xpzYszQJ0zkQIBf0MCt8a8/O17aQ61ewkFvQgEyaYwmq7Q09NCe3sCVRUUCmVeeukcteGb
      JJ0slsuPdZ+/SbM5x7EWla+8eIPxsRn6OmK4XGtNrVJKyuUKYjEt1HEcEI3gRsdxqNdNFEVZ
      /iyEoFqroev64vMQtLUlePvtG4yNzdLcHMXlUpi8PcSMEt8TVW4J6md+47e/XHCUZZv0XsBf
      nOBE7Q1e+IifXtccl1PhRgb/HsCYHaSenkHzhRue0vcRdXcQ5kZ5Z1ryrXw7Mhin7o0wO1+g
      mC8y0BkmElpaoCmIVROsy60SDDSIVErJm5M2Fc/KwlTqHm5N5JiPH0YaZZ71z9DX00Rfk5tz
      dwtY3ghS1ZieTpNKF4m4HWIRP0fbPURCvnWhyg2prKgKAoHLpSNth9zsHD/7E4dw56cZVVvv
      y2OcVUL86FYRx7IRxSyH+5J4vWvDruumiZRQqVYxLYtSuYxh1KjXTWqGgWXb2LZDqVSiXjcx
      jDogcbtX2qnVDPr62gmFvPz1u/Psb/HQFNRJZSrkPXtXvUJ7PnSFTCnHzXycQc9xhH7vGPJ7
      IVidYl5t55sXBBNGGyL+YEkL0rGxJoewhUPFXUNNT1FfGMGd3Ae2iafj0J45fLaDUBReV44g
      vN7l5YBwbD67X+PJgd5VAxZrTIVykSCXZgMhoNNdZV4uxtUsqhHVlgEAXCXJ48caUZ+apuF1
      ylRpeKOLlTrBsMPg8ByJWAC/f7U0lIu9ycX3jaR5oQjOnBng0KFuLly4w9RYiqYYzMcGUCK7
      IyahuyGapG4ZTDb18Hcvv8u/+LmnWL1Acuk6lmXh9Xpxu3SqNbXhPJQNppROQ3XSVBVVU3Ec
      B7kul+POnQkmJ1LEEyFmAoe4MDLL8XYfQrkPlWvpUWwC9X/733/jy4mEwsFWh+rMNHN61+Zn
      7gIlXzu5QA8Lrg5M34OZ36SUGBdeohRRqAd0pK4ho1FkPI7pAauaQ8sWcMp5jGIG1eXdM2aQ
      c2OoQiJXzV4b2lYUhgoad85f4epUjVenBN8bkeSzRTpCrHKcrahDCOiNKaTOvUHa34GsVZDz
      48uBXbaikUjfprUlghAKbiPPjWoEoemYioenYwUO9CSoVKp4PBsFVq1WZ3wsRSwWWuy3oYq4
      3Tq6rlEqVugK2Hy6T2FoPE0tsDsmCJWm+FdHTbr1MufLcbrUAtHoioVMCIFL19E1bfm9pmlo
      moaqqmiaiqZp6PrS58b7JUxOznPx4iCxeIiMHmdcRrClwvS1K5QVP4VA667Gu52xSv1ffvdX
      vywUEyGgViwzKPu2dHTIRYklq0VkuYDwbGGP3QNHiZSS+vgNKpkhan4dGQ6v3IhoJMWARHq9
      GC4bq5qmHnFjZMYhk8IqpRsEZ9tYC1MogcjOHDhSIhcmUPLzqJrC4eJl5oK9yHIBmV9A+DeG
      ATguL3Wh0R6Q7A/U6fDUKGZyqPUSyebNwocdNE3l+EALrfUZhkZSWO2HllUSV36Gn3t8KQNL
      UsrmuDo4hxNMgDfAxTk499Z1yqUqHizCIR+phQKjI/OUy1XCYT8/uDDHVN5mX1tgjbkyEPAw
      O5vhiScGOH9hiEI2h+2PYek7X1z21EaZnlrA7dH57EEPHo8Ln2/v9HKv100kEmB6Oo3L7+dU
      IM9YSeWO3k0heXBPHXFrlOh83QXCRKo6GFWoVxChhlSSjsOx+W+R1xNMFT386pksk/MWo+UQ
      lqMgEUzRhhFs25OBOZUCJZFHJpYIbvU8tm4a1HXseGOcTiREeen7yhiYJgT9eMYv4G8eQHj8
      y4zcaEoi6zVweaBSpLs+xvFQllfvlDnWG+KjZ/u4dX4Ga2aMgEfD8rmI1DPMqXFkaFFy2haf
      b8lwfI01qAW5nIov172C40gKhTKjd8aIVR2q2mmklMRmLpP2d/DDS8M8/3gLQgjSdY2624eq
      N0yAItpCzfMM522LW+++h/+tCbI1SWtTmHStRuxKlnKgmVtDWTpDsxze35CYAoGiKDz99FFG
      RmZRpMOnTrTwyuggY76dBdJJ2+JoUuHEvgG+8fY4f3D+Ns92u3juucd3dP1OoOsaiUSEp546
      0nDyAd2ZEn903SK3x17o5RkAoKNJxR68QHv1Ds91zPBk8wL+/AjN5jhdYhJpWdylF0XTeLy1
      QEeblwOtkoE2h0NtNocCc7AwQaFkYXp2Hga8GYy5EeqRB7T56jp4XI3MLY9GbPw8P9NSpDQ5
      TiHUCYA9M0zH/AUYv8kzTQW+cLaJXLbI5z/ex76OEC5dxVvLIfNpIn6dHr/BL50NctRX4sZo
      FkPzIXQ3YwsGR4JVdF0F5KpZatU91U2GxrIkog1p+9IPrnDNaiHl62gImtwcL0Sn8WZGeeP8
      KO9kQ0Rq8/R1RqlPDTN/6zay4+DivbmRupvnW4p88eP9dATh1atzGAefppivUMGFCMaZGx1n
      X3sQn0ejIUAkiqLidrtYSOe4fmOMoidBOdi2o5lbKApjU1mSZoqCpTEqkvzkyRgB/96aJ3Vd
      W1bvarU6f3ndYDa87x5X7R5rGEAIQSLmYn9/iEDAhduj0d6k0d2s0tWk4HULZnIqhdgBOmq3
      icXWTntut0ZPs8KxRIGx0Rwld3LX05WUElkpUKnN4rjv18ojWLLCNCwxAgQknRpfeKqbox1e
      ChNjTFsB2qbe5p9/bj9nDiU42BNHCGhOhhrlSxaH3hF3c2x/nCNdAQ60ehFC4PfpfKRLpdua
      ZGy2RD7QxutXZ3ll2sX42Cwne9eaGTOZIm/dzvG9GT9mIUdnwkM07MPKzDMV3IczcoVnIjme
      PtnJ/u44FwohaqFWTsfKtLVG6WoOcfHGNP2uHHVHYLhDCKAyOsjJvhBNTRGSPrhZDuK09hOd
      u0G1qR8sk/lUgYF232JlB7FoGdJwHMm1O9MQb6eoh3ccW1/3x7maURkP7EM1yvQqGZJNER40
      NGLJpyCEWI6eLVdq/Mlb84xGDj+UGKR1FCbxB7Z+CC1Nbj4t0kykX2Vf/9apcW63ygn3Hcoy
      y+u107BNEdjVMCZvUzZmkB43MhS89wVbYmXBuWIRWbGOuN0aXzwT4yOzw4yaXhxHEgxuXyJQ
      UcSiTi7WHNvXFeW3222mpm6gNilcW8hxa0ZSr1vk8mXy+QqzNY3X5rw0+4P8k/4a/3jN4NWU
      RcTjJZsPQdSNnmjjQrWOen6Kpw8l6FMz3K75eWe0Rn+/JBD00tfXwuEkPOHP8CfpOKgaMc1E
      EQpIQSLmx5s2KAlBNtAO/jBOLcq8XebrL17gSz/zBKqqLKpmCo4jmZ1JY3QEUHfhYBJCQLQV
      l1FEdwwOHujgQYm/Wq0tS3wpHRxHMjyR5rtjkqmmE42yLw8BuxaxyYSb5A7URUURnBlw4Ru7
      yPdzR3B891aJ7HIeuznB/bkk1hJno1iKXPV5I1pbIrS2LEmurYh//Xdy+fgSQ6mqQldXHOnA
      Qn6ad/UYX365jnQURLAbPD4G6u+SdAmsmoeTsSo/KtmkYwPIyH6EomAjqGTnqJdK/PnLRUai
      x1F9Ac4kjeWeW4IKHe1xxsbmGwV4rTqfONWKpmlUqwb/+TvDVE++AEJBlnIIBLYngK9W4HY9
      yj+8OsznnurC42kIud7eFv71v/ws//Wr3yWnaigtPTsmNFnMcCr9Cq3NETTtwdRdKSUXLw5x
      6HAPpbLBjZkql6shsr5eRHxvVav1eKihEELAsR6VX2i7TDA3eM/zvQeeIFDWoGrc89z1BN9A
      IyKSDcQvWbsQlWwk+N3al5f6WPkvFCv8zYiXqh5AJLtQEu3EckOoQ+e4nlHQpUVvT4Lnnurn
      hfY8h/MXwKggShmUUhpRSHH2aCufOhEnNH2ZX4zfZV9XZFmN++jjnUTCPiadMLrXy/7STaKR
      xuzq8broP9jTqPgmBMqhJ8Gx+Vxkml8+7SNOkfG85M5UGbFULUJImptj/OovfZzghX/A9cZf
      Io3Kju4+VM+QTAQpl2tMTc3fx/Nbiywe/uNlja/cDfAjz0ly0f49z2veDA/BlbpRmrYm3fxy
      aI6vXoFCZP/WVwqBt30ALTVGvp4G11bq2GYSW677tJMfZKN1Zuf9LV0nll/DYS+/+wmNickJ
      LDlJNOgm+Xgbk1Np/tNfnqfziePLXtOzR1s4IyUzs0MNq0c8SDYTIhoLkFooYKkeeloDNNQ5
      dc09nWzVeXcYDvQm0XVtmcE/c8jL3Zuz1IKLNUhNg9YmhbppM9/5JNIb5NLCGMf7HVYLj+bm
      GL/2z55nYSHPm6NvMtbz3D29xE21WeLtIWrVOm3t0e18TffEzbEMb7gfg9DDJ/j1eAgMsDkx
      +TwKB9VhbkwVqGlhrHBbI6F7s0HFO1Fvj6B6BWYwhNTXO7a2JtjtCF9yP2G8W7dnOQqa4qw5
      z+t1cWD/WkdNV2eCn3qmm2vXRth/YMVMLISgrXXJSy6IxYOAJBb182zbLJbpIDwKEmdxQd8Y
      d1tziJ9buMvA/tZVplZQBUizvtKx28ef3vFjqW6ItoCUlCoS6bBhPdPaGm+ETLzxI5ThScz9
      Z9G6D23+RBybw+1e9u1bMvveH+kvBdO9M+NA8P0nfnifo0FdLpWBeIXfemqez/neQNY2TrdS
      SpzsHJG+s0SzFTzpFEq5tPacdX+rj2+HxcCAe4xy0Wq0pr+1qDsKWdNFznZhy83aW0tcQgj2
      9bcSCvm2iZ5cUcs0TeNjTw8sLsyX2lvduuDY4S5qhkGlUuetN29SLtX56uU6tWjnmn7Lif5G
      FCXgqmT44mGBgSBvNRJODMPk1q1xTNMkHg/xcz/3LCc7PDxWuoIoZzcdqVBUXpn1MjeX2zC2
      3eL2yDyDWue9T9wG0tyJyrw5HhoDSAnvvTvFzFRh+diJ/S4C1RlcGhze5+eT/vegmF7+3imk
      KV3+LrncbZxChnrHMfTpGbw7SOnbicqzMy11Zf2wwmASWwoKlk7GdFO0dUxUBJKSrVOwVqtq
      m60voCkZ4ciR9YncSyy59mdYy6QrY1kN07T509dS/PHbBa7dmeU/vjTNZPTIlqZCtVbgF9pm
      ScYDCKAuBTYO1arBX/xwmB+8eZtbt8ZRFJUzZwaYLoGzSWn1JRyJObQ0J1gRGDt7ulJKblwf
      wXEcrgzO8eJsCLw7sPiV84TP/x3uShppW0jLRObmoZzjZPoNfENv3hcjPLRwSsOweaV4nH/h
      mWLpAXk8GqfPdlA3LEzTxuWYKI6JLSX10WuUyeF0NIGuk8sNIxxwjh5bXgvsTK+/P6wOWFsi
      udUQSAKqiSKgZGlUHIGNgi0hoK5n0M3H2dK63loil4l/6XXjPSrL505MznFjNM/Hn+jF7XbR
      GnYxPDZFmQg1fxJ1Gzu5I0FdVKXcisStNFSnW7cncDe18Lp6iLnzL/PFzz/J22+PUIz3bRsY
      OVh0Ua9buHQdEDuy0UspqddNbt8e43rJzxU6sMM7C5QMpAZ5ostNqXady5koB9QUSbdJZ3OS
      3jMHGuusW1PQ0rej9pbw0BjA41FpkjbfuRXA1nzsD6Q5e6TxQEtFg384J8h4e6CtBSwTw64i
      FWeF2KPRHZP7XjCGWFZbxHJKy2osRRtbUlBxNNyKjS0VYvr9T79bj2PzsXV2tDCSU/naD4bo
      a/YzXXNzdiDGD+ZDKPGNAWKiUqCpOsW87SMu8+R9NSACy+sJwZHD3Vwav0kx1MSkp4O7d6d5
      dVZHOXpwW+UmE+rhlZu3+ORj8cX27k1K/+VbNxjX25CJj2D72nesPUnLxCiXeRFi83UAACAA
      SURBVLvq5bFYheeTCmdPHqSRZiBQhEJnR4JftRf4o7kCwrfzsi17xgBSSjILFYQC0ZiP6YqP
      lL8f4W7osbn0XQ7lxwmG3JQqklzyBAQXN5LTdIJ9pylff5laYk2jKMUiTuj+69AskfNm32z2
      uUEYKpuZUwFsKfAoNm5hg7K+PMju9eG1M8/qMOalsaxmRsmzR2M83ufn6nAOl8fNk8eiHCoY
      /M2tKca9K+VCpONwXI7yhafCONKhWnURDscAQcFS8CoSlwLBoI+PHW/mz25coNxzmq/feAe1
      +zBsEvS3BrqLd7IxTqRy5LJlDh7o2fL+pZR889VbTMUOYwV3v6OL0HTslj6i2Rvs64rS09MK
      QqCq6prf167XEWYN+AAYACCXrvLmsEY9FCAbPb1mCq3F+vjKrQDP+q4wenMe+3BwzeMSioK7
      7RD2QkMPlZUiqieEqNhUAg7yPmvTr1kkbzpRrDVlNqxEzuLYlMXrV0qxuxUHt+Ksand1deb1
      x9ZCoCw66Nb3vzROse7YZi0JFFXhtXycXncRTVdJxP382hMO375ymXc8jy3mGDi0eiyEovDW
      eyMM3Rqnuy3CJ54/iUeRDYvRosf84P52ft01y5/86AeYT/z0pmPfDI5Q+OHLl/D7PRw40LMl
      +0spcck6NdV7HyKiATvYxKxzAMtJoeva4siXAhoFpunwD4MCunbHYHvGAEII+gcSBGJVvjUo
      N+iPDfd5M6/VP4roLWya1qbH2wkvbnkjnQahmNNDIPZWzWhgNeGtTViRKChorPcmr5x/L2vS
      Zoyw2YxzL2fcktm2sQ7I5yu8e22GlBojGzjE/vpVoBEs9sq7o/QlPNwaO0++/QRC1fjWVIjv
      jCxA6yk4+QxDgxeIXx3n5PGuNT0qiqCnp4X+dwe5sTCFktjZtkOGN4oaSfKZ5wfYil0BqlWD
      2ZID8ftPjRUuD46Ect1BSodGuIANUnBzosBfj7iodZzaNYPtuRWoOemlO1je8nvhckO4ierI
      FarD57G3StQWAmvyDrZRWhbd2xGdWP0nVZDKPYh0I1aUDQcHi/WEvP1aY/13G73Uq6X/6rFt
      bkpdfaXD22/d4JVLM7zie5IbweP48pPUpMbsfJFXbxd5zf8k76Z9PNVqQ6WANKooXh+qy4Xw
      hxCqhjpwhq9fNfibfzwHKFTKBn/2jxcZHZ1t+CQSfpybb287ljV36PZSiXaiqa4tn7WUklrN
      IBqLbDUF7xiWy8/fLnTwtbcz3L07y8RUmj94I8tX51ow4jsP41iNh7IIPtFZ59JwGrlNMSZX
      tBWnXqE0+Da+9qPozQ2pJKWkNvQeimVRDik4Yd9yaPFWBChQQCqAA0KCcFhRTLZaA2xF0Csq
      0ZL03d0i+15MJ9aMyXAUao5KWNve1PvE2QP8P28YyzNnNd7LFduievsKdz37QNe46+nnrhZE
      BAWyXqPZXGCued/aER3/GPXMuxSLZYJBHz3NAf7T98b59KEMjqqj7Duyi3uFITvB9aEpjuzb
      WAx4ydE1PZvhbfv+CHQ1xGJB4BuyjRslB7J1ROTBHGhbMoBZt7k4aJAM2PR07ywys1S2mJst
      0dbmx2ssUNmGAdRIEyoQSnSscbtLo0LFyiLb1ybWbEXIDeIXSGmDkJuaMbe+dnPJvqQWLRH/
      iu6+1WJ6sUe52KpoXF9zVIxl4l6vIiw6vYSD9x50cenyGN8a0al0Hl+rVKkaQ7FTKJUcP+++
      xKWym0HficZ3Lg+zhKFcQLh9OPkF0HQUf5irnsNM/e33OT7QyqfO7MMfz/F3EwGsO+cRx3e3
      AYYdTPDuQoojW4Tq53JF/n5ER/bs3f4yQiigKo190h4Qyy2syZICRsdLvFfcz5eaR+/ZiCPh
      3Vsm7xb6qEc6EOdGkInOHSkga4jftqhMX0c2bcxR3Zr4QWIjll37CgJnlfKyFAN/j3FsYIZV
      hL3tlWu/zVg6HsXBo1hUbY2AWl91zsb2VCFQxdY95HJlvnG9Su3oR7asgiFMg4uFEIOBfSAl
      R9Lvcl3v44WWLI91+3nn9jglTaEnqvLiQjO1UBu501/k1VqZyXfGOeyvccha4Nrpz2x7p1th
      WG3n1Xcu89EzG9MVhRCYH3BZHKeUo/763+P+xC8i9LXxZVqxYPLqmMZUNYDHzPOJ3hzxhI/L
      I5LmSJZ4YuspRkrJ7ZEqP5ptoxgbQESVBhm19N3Xat8pZjGdMrgaVZDvDbH2tVxGuj0ITV+U
      +U6DsVGWDYtrr9tarVprHdrIFJuhLhuivOxoOFIQ1eubnL+V2rU5XruSojbw7LYlYOxwM0M0
      N0YnJam6DuEQs8UJnvZ7+IlTLSzNaD51mv82UsVp6QePn2HPIe5KiRQj+O68SfXwx7bsZys4
      3hCXp718lMa+ZKvDPXSXhuJ5uJXk7gUlEEHbf3ID8QMor48FuO0/QylxmLwTJBhy8RfXmxnt
      +gxJ39bWFyklb57L8M38aUqJw3uSsKCEYugVC+r1Dd+tluErJrDFB20YuIencE+Mo1ZraIN3
      UOZTrERR2g1VRirgqCBXYnVWt7uZhWd1zNFaBWajf6Bo69goaDj41SW1ZzPIdf+wPn6ocVsm
      l5W+XYUFCyFItZ1C6G5K1mrVrdH2/t5mHg8VEdODOIsGCCEESmsf1e4TG8awU8zEDvF370xR
      rdYYG5/Bshv7E4zMlTGCe1fH536hdmy+papSXBWebARb+dqFCGlvD73F8xxpbRCiWbexLIcb
      d4qMjDRK4r153eJSNoHcJl5kM0jpYGdmt/hW4Aq34756CW0hhchuHoy1Bo6DZ3gKMx7EbG5B
      u3EVj+3FMzmHSM2jGHUUdIRQQQiEUBFoG5SizYLqNl8brP289KcgCakmMbVGTDdQtlFrNsfG
      8y8PF6iF76/IgKyWMQu5jV8IweefaOJ/PSsJFSahlAW5aJ1yecG5v9r/wuPnvWKE/+N1gz8Z
      DjIx2cgRmM6ZD7yN0V5gySG7GtbE7bWLYCUUpxyMcazyJp96HObmLK5ez3JxXMcKJskmn0FW
      6vR9/yWGOz6LFhjfdFq5x1DWhuwuwkxNkk8NEvA3Q99xrKCGPjSIGY2uunKjdNKn59BbejCC
      ApHPI70+rNlRXMeeJuz2UZ4ZxPGXECjMlcr8X9+6RtIu80s/dQaEs9huAzux9mxpVRISWa9j
      I1D0lRr6jSKvglrVxO1p7C8g1jDHRgfYEsYrLoTnPvb7khLh9ZMOdDXidRZrE62exQzDwHL5
      USo5bG8QoSpEMnfJ1xzoP7n7PgFa+3GAmpT846VX6Ll8l0tqH/TcX3MPE9KxcWZH1zKAlJLO
      7Ht84rQklzP4s5EjjXzeFonwN4q0Ct3FcOcLjTS+pt0FHkFjutWaNxbf0hLtRGwbJZLA5Th4
      ihlE71ny9RRyi8QYdWYWf2IfdnYSbWgeX7gb/cwXsMsFtGjDIxhq7kSoOlJK7IVJJtPTjKZS
      HLs7w8HOKH/08h0+MZBgf2/TtibT5We0zfemaeP3e8mk84371BuJ55ZpoeoapmmDcFaFOa+0
      uvh01hytWPcRWmFbyNw8SrwNzSwDS32tndVi8QB+3aEW6W0ok47DU20WC9kq5+SD7QQphGCu
      /+PMLkwjYi337f19WJBSggT92DNrGSBWGOQLjzd2JhmcMAnJPBXDxo6tJdiHkaAshEBr6V7+
      rPiCWKlJqFYRxRL4vIhyCak2KsMhQbcU1EgSu5Am2P0EalMj7l1b5WUW6krBVa2pE62pE7Op
      gz9++yLHzg9xvayQmcvw71ujuD3aOv1/ZaWwNq1yc7hdGkatjsfrQlUb5QArhoPH5UJIB0Vp
      xK9s7U1e275Xk8jF4rE7LTYmVA0Rb4NqkZ/oXJH+687CtoCbbyFPNDd2pUxPk2w3ae9wc+H6
      FZzex3bU35bjEALRtDOP8vsF6TgN2l2YxLx7GdfZF1Y8wWo5zae7ptF1hXze4E3jMYolCyvy
      wd2EcHkI5hqbR3gX6vi1JHp90WEkJbg9mOO30Nv3LxP/TqDH29F7z3DeDOEr5UhXLP7w29c3
      OCpXs8LqjKytoLkU3F4Vn9+Fx6Oh64KAX8PvU/D5NTxeFd2lLrZ9b4J+vl/lS9rbiMLCju9t
      CUqtRHDLaGZJzTD4wicP8py4hmvmNi8E77JvXyudnU3sN0c3VVN/nCFKGUS1QHzsNQ5zB23f
      qUZA3Wd//X/+skjd5Ce7x+hscSGlZHSyxkgpjN02sKdVo3cLxeNDbe5G8frRk10IKaiIEggF
      z0wGXboxL7+C1nMUZasyjVtA9fjRVC/m8CVctQqZuQxtiTDNye0iCXee+LF8xRaL4SUGMBwF
      FbmpgPd6dJKJIHcmChR3WRFZeoNcXdDo07OEAxs5we3WCEf8tMfdHAqUOHywFSEUFCGo5AuM
      T6axYx07nnkeVUiz3jB+vPFXOJbNTw8UuZn2Um46CEJBITfHr32kSFfLYtk9ITjY7+dEYOzh
      D84ydyxppJQY2Umk24MvbaAn+qjkR5GdPVvmFt8LalM7It6DdLvBF+HFSzPLO7U0sNo0eW8V
      aCdYHcXoSKg42rY0JgT0BgxkIQ073ODCyS8grTqWJ8Trw5s935X7cLt1WtsaYdIgQcDp0/to
      yt9F3qdF6FGC0HRkbh5D8ZKYv0gk4uPptgJfcr+MJzuG8kxHBmVRp19dmStb1R7a7h/LkM6K
      CW6706TEGLtKVZTwLlTw9p1C9wZwVyW+I8/tWvovQQiB68DjGK4Q0qyyMDXLpatj7DXRr8bq
      RbQAfIp1z2sGohb/9uAM//bgDE+bF3GVUtv3Uc4jKyXQXUwVduKIWzre+Nc0laP9MZyZkXuO
      7ZGHECAU1H2nqBo2jpQMHG6hLtzUgq0obc1rLSxSSkqlOjGy8ADJxjsa2w72IpCWSWn0PGWt
      hC9dw9NysFGiXNXwnP4UaujByq8rTZ3onUcR1Rqeaok/ubzAn798C8NYS5jrE/BXZoeNDqzN
      sKnDTTTyC+6F7q4E8ViAWNTPZ05E+c3+WVz5ma0vWJjEee87YFRw6wobnW73giSfryBLm/gR
      fgyhRJPg8VGv22TTZSbG0nzjioLQ3Su1QZekvZSSN28Jzvk/sVwLf9kS8RCwlYtfSklt+jaV
      C99GqVTwqFE8R59GeLzIShHhC6Fs4tzYdf9CoEaSOMUcCAORyTAqPTze6iMY8m5r9lxSZtaG
      Weygz/s0DC6NJeBzc8iTw0nPMlv3IvW1oQZCSkh2o7jcfK4pRUtitzOkoK+/FWd2lFErunUZ
      /B8TSCnBMqiPD4LjcPRIkiOtkpFZa0M5gsbeTUIsmzqllHDz9eVN3d4PWOkZapd/hH3rHL6e
      x1Glip5oQyhqY6HmD+0pQwpVRd9/gnqxguNoKJkMzg7Uv5WaEbtTlTbOJrs7XyJJNgX5/ONh
      fr1jlJ9VzvGccxF3trH7PNEWArLKF2MjPHbw/sIQVFXh1LEOuoe+g+fuu8hy/r7a+aAhqyW6
      bn+Tk6U3iD12imBzgpmZApGIm8PeGcRM/kdSaA3itiyHl68rzJgxFkIDK41YJpgG0qyjhB6s
      DuS2g5USJ5+mOj+MK5hAiyRRvAGkbTW8mw9xGyQpJU56GuGP4L3yEr/7KydR1a3DJbbDel/C
      dsyxm9lg7fph7XW27fB7bznkovsQmWn+9UCa5qbdFRiWEiypoK9Sy6RsqENf/fYtZg7/9Puy
      FdVeQWZnETN3OS6GOPJYC1dH6lwqtZL0mfzKs4Kq4aydAa4OGVz1fmQN8UNjJS28gYdG/FJK
      nEqR6g//AlnJ4993GldrH4q3EUYrVO3hP3jH5sDCOfSRC5QthWvXRrlzZ2rDaeuD8jb/Xln+
      X5O7usU1S6g5CsY2O3Yu7zG2SRuKIvAvLqidaAvXJ3Y7YwvKto61LjtNCIHf7+ZTZzpQh977
      sfIPBIfe4HdfaOGzn3kajxrnhnoItbmbhdgR7o4WiIY9KNCoxT4/V+bO7H3EnTwApJQ4tTLG
      9TcxR67hPv1ptLb+h1YKezsIVSPrb0PXVbTDT/JXL17i6pVRFr3mWwbIbUXQKwma6xlhcc+u
      VXWAHAlFS6dqa5Ts7Rl9SwYS4CrMEC5OINOz5OzdxmhJApqJV7VXHWn8abpKV0eM//CZKIGp
      K7ts94NDLdLO+ESKYNBLV1cTXk0gCvM8VjtHJKABEqVUbFh6vnc3ymTbx3fXwy6thFJKnHIB
      Wa8hLRMnM4ss5XHtO4n7yFOoD1G92gkyyWNU52eR4STi47/IxStjfOPFdygWVko4ble3BzaL
      /l96SEszwxJTrFo+C4kqJF7FxpYC09moeq1mwM3+AE52eahkMoh4KzNVF46zix/nHnC5G1Wn
      q8XCvU9+RCB8YcqlKgDVap265kV6QxzrVGjvCAMCbXq2SofLIXs/u0PeQ32V9RrW/AROLoXQ
      XSjeIE45j5poQ0m0oW5SzOkDhdsLJz6BLOdQos2YRz5GuTyEbS+lWm5Wi3SF/OUqub8aq/OK
      16oxK1f6VAspIciiHr5Y9HY3tU+PH2zmRqnCzVIW3a4BG603kpV7WY/NTLWrYdRtQp29/DgY
      R6VlEpt8j/1PnuXFd2Y5l/Vjx4LsL75Ga0sCo2bh8bgQf/Pad+QdGScT3Lps+f3CKWQQvmCj
      QsG9Ci09gpC1Mq0X/4pf+dJTaJqGx6uzsa7PxllBsBTwtsQgW1RMWCayrX0BGwtnbY9Ktc6L
      72U5Fjc5cnhj0dndVtETCO4Mp3h1zo+SnSFVMCkdu7/Uyfcb9uwoCg2T8JJa7cyO0JW7xNNH
      ffT1NyF+77XrcirwaEXtPSpQ50douvsKhVSKluYIzz9/is6upg1MsJHAV+p5rpyxkQlWV3xb
      mxew+tqtcX9Wqc2vsS2HStVAUQTa4l6+iqIwPF3ka2MJLNXFl6JD/MVIGDo3L5v+qEM6NgfT
      r3G0zeZOxsfsbBHx+9fSctJ8fxe/Py6Qjk3L7AU+128xOLLA0O1JfvmXPkoovDH2aC2Bi1Vq
      z5IE37iw30iMm+Uhr4UjoWi7CGv1XUnz7WaQu1Ml/vyOD0MPoI9cwAomcEWbMC0HJ9SE8AUZ
      KF+jqTzOO/UujGgXeHzb5ik/apC2BelJFCFwvIsVqcuFDxngXpBS4rv7Dj/Vb3Dh9gLphSJf
      +PShxQC2tT5guebI+iwvsfyyeTrmirokkVimSSpT5uwTa+uNSAnlmoXPrSxWwrg3Niv/Ihat
      fxfupPnhpAehu/BpDnMiziFnhJm8Tbr7qcZ1lSI/7brMQG+M19+8hS0FdwOHSccO7qj/Rw5S
      YqdnOFi68CED7BTKwgTP2Fd49cIkubZWrOaVOjfrI4Qar6s32lhrQt0YOiEalL3qfIkkbFc5
      7qnT4lV4+rEudF0ltVDkv33zNvW2Ac62mPzEY/e2nG1V/+jN6xmuzgs+vV+huz2EYVj83z+q
      UOo4sXJvUuK7/n3+3ee7lzfXKxQq/N5fXKV+5md2FM/1KMEze5Mno/PkbS9Jd/XhlUf/7w12
      tJV/vHUT2dyMqFaQPt86Sb7W5yuXzZ0b1Y6NnoTNJLlDHh+vIqFm8Y3vT+JJZwkEkpTaT6MG
      o7yWLZB9ZZQvfqxrg0VuNdFvpvrkc2VK6Sz/8uP92LbN62/c4uqUSaHnY41RWyYoKsI0ONOh
      MjaWwuXSKJdraJoKhTQsTEHr7tNiP0iYUgOh8HSfg6Z5UT/7W7/z5cI23scP0YBQFOxcCtup
      QiiMEwiscmxt5Qzb+G5zNFSgzRgKAEUgCjVcySPUI63Uhi+itfWD7mO+5uKAJ0toXZ7xdjq/
      40jeevMmEzWHd0ZyHGsP09/XQr5UZ1RpQbg8yMwcAgc0F6OeXq7Ibi6WYwy9d5mrpRAnWwVZ
      dxLL/8H6bnYLGYwzYrdw8fI0+yOVDxlgV0jPYfgV7ESikTsiVnsA1mL9oriB9ZaerZxqS+cu
      spd0cKw6ZjVLRSlixoKYmRnMwjTVzBjkcxzobUUVYgdBgo0eqjb8fTXEnNR5Ogr+gIegT+e9
      l14laJcwVA8DpeukawoinGjk+Go6VusBnHgH03YIM9p2z90kQ6qgLsGvCswt1uzqqle3IrAe
      chqKUDWcQBx1Yer93STvxx0iFEOGFmtnLtPZTn4tue693OT4ur6W44kARUVGo1jJGNLnA48H
      pInuuHEZKu9OOvy/35nm9Zt5MqYbtti4b7lCnoR3xotItwdUlUy+ChJymSIf2eej21XggDPB
      9NAIvnWRGULVGkSf6NhRvZ+wphDTFfxq446aXQpepfG+1aXiEpBwKbgVgU8VJF0KrvcjC9Pt
      47zR9eEaYDeQdkMvXk24ErmJoWedlUeuMoeKrWaDrdBYR6y5ql7HPZtB7T1OqZ7Bae9nqqiT
      SceIhQu4WnwEVGtZBSoUarx0aYq6LbGlZKZiM+pvbMUj3R7+8t07+Mf8RHE4EvLSEwtxveCj
      9PjPQPjBqroZjiSoCjKmQ1ATVGyJW2k8pZLtUF98djVHEtAVcqbT2OvsYWcjApqufsgAu4Ft
      G8vCdY2OLTbq3OuLDS8dA7EqB3gz59fGyNH1aZRCqKjdh6gZCzhdHQjDQNZMFFWnxe/gV2yK
      RYP5VJ7J+TLfXbBJx5thSZp7ASnRJqfwlBzqh5+nuXyXf3Imzh+85qHkPYrwPXg1NwEUbUnJ
      lhhOI/E/oimkTQeXgPKiP7FiS5TFVxtJ/d5JcruDlGyWeO2l9iED7Aa2XQMa2VdLMTWrsWRb
      l7CpLr5ybMnZteGMLXped9x20PxRavlGkopwHMpuk+bMMLHQADOzef7wpQlqoWakISiv353S
      kbjnCwR6n1kOOZ+xO/j9t7LUu3a/y8pWkEB1dUCehAWzQd3GqsNFu/GhsofBe0vw5sY55RrB
      Vhvq3nzVBVJSsTUi5tSjwQBL5LC4xcU9sdPz9hJSSizuncC+3SJ0vfpTq5oo6lKdoEZlObGY
      lafrGpVKjWDQy9o9D0RDmkmJqrgxEThe3//f3nsE2XWleX6/c86993mbHungCEsAJNEki6xq
      VnVNdXdVu0VpWhHShBSzUShaodBCm9lqN4tZTcSEVlpoWrOZnuox1aNWd09JbapYhkXQgmSC
      cIlEevu8ueYcLe7LzJcWmUgP5J8BIvPhvveu+b5zPvv/sIIyf/Rmnr//fJ7Ho/M0E4JKX5Rl
      hQ3vccsM8wOiyd4V4QfQmR7czP5x+B8HGGM45z7ku+90bbIBGIrF3PFQgG5H4mqISJh2NVEJ
      noYAiEmBbwy2EDhSUPI1fRHFVDM4VCUQQmDLGB7bN7Vs9d7N4AcaZcD3W/MNWpGlRqMeMlZs
      oIRshVwtC3dhAi+qARsM5MbH+bP6OYqeRz2Wwu9OsTG02vqUWgVvfAy7a+g5uF13hqQSVFqm
      zfLipgQrNv9mUKw+8/o+7AZCCKaaCT65M04QBFy93o9lSSxborUmGokcDwUAiCmBpw2KMHJg
      DMx6mrwtmXEDEkpQ8DUxJXC1IW/Lle30sKCUgzGhcynE1vH/1VKI7c8vHnfw3IBEIrpiUvl+
      gGVFQwpFo1uFd2uL2YRSVLtjrW8SIGB+YBjcGqYz1/JT1gmQ7+M8uA+FCtELb6DOD7Yc+v1H
      SgnSlqQSBHQ7iiU/ICIFrgYHQ9qSLHoaW0DGlix5GluEUaCF1jNVQM6WFHy9p7CoSGR5881e
      7o2M4TZdtFHUGxrZWpSOhQIEBhpah4E6AZYQlILwBpVbN2B5am9EtFaWwwiVrYMbuCzPHHh2
      ECd8kO1cSyv/okPGaK0NWoeGiVJh6YS18jOAYuNopo1OMoBJJlgmwl1TamEAYxDVGtH0MM6t
      G5tShe8XBNBhy9VCb2No6lApylqTsVphUAFJS1IPDI4U2CLc3aNSoJYVw9cEe9wIYipACIPr
      NUkk0zSbLslEDN3iaj0WCrC6kodXO9FcbcvzWndgeWVY9A/b+l9FItNPsz4KsVgomGYr86Zl
      sW8Rylt+iw4MgdZUyjUsy8J1XaSU+L6PUgrbsUkkNpooq1wU7fHX9fVG4ZfIYgHrwdeYviGc
      C9/adDztfsIWMNkMsER4Bk0ThnCbetkcMjQ0+CZ8LWj9rSWYehkTT1MPDJ425Ky97fIm8LmR
      c1la1EhlcCIKJxIjvF+hJ3ksFOCkQCazOEWNFxeEUymfvTwJsRwZWmuPG2MQMjSjIpGwfTEa
      jWKMwbKt0ARasYM3+571ybWN3WPCD7BHHxHkOkhkLxy48MOqje+2lL/Ysl+WIz3h7+HPlbbl
      va4NRFN42mB8j+bju9S7B5GZzuc/Gd+lujRN4uIr6zhuVxeOI1eArQKCxxHCskkkB6nd+S94
      N28RtEyVZ5UfCLGxLkcIgW0LbNth4yjWrYVbbHLHzIb3tI5TCo3EKrtY13p3eJVHD2HZWBdf
      AyFCmkeviczubgI8gIjEedwY4u16E8va+IxKpSPOA8SkoMOWaAOTboDTFiWwROgbGMI6kqY2
      9DmKp83QIa4GBluwZX3JQUHl+5DD1zG2jTSgzaq51j4Vpv338MX15cirq9BaYq3ncW42Ef7w
      BDCxKE7m/IHa/dshpQSBeY4Yf+veiUQG3MZzf/+Ca/Pju2WCIMHQsMbzNbOzRTwt+c/T/Uer
      AMlWRKdpTKtORNHQhoKv6bAlhdb2qQiVoOiHjrEjBJYVjhgt7TFKsFsIIYjkBmk0JiAaDVdv
      o0NGvc0Ev+19y1j1DdY3zbDF78tCvVXV6WrGeEMZRjJJMDMKl9541qXtO0KHVpBQUHMNaSXQ
      hKZP3pLUtKGhw58b2lDThk5b4mpDqc082ovpVu+6yNeEZSw/+ru/5XH0Mm76CgiJSFtHqwBC
      wGwr752zwshBTZvW7FyBZzRpJSn5mqwtWfA1aRXWkKSURMGhCv8y7FwPyYkCFbuJUIqVuEu7
      kK9zRldeX9f4slGon3VBG/99pR5pE/1QhQLE9kYg/LxIqOXIjkQJsGUYjcbA+gAAIABJREFU
      5oxJQVSF05wDE+YHkpag2dr+Y0qsUYB9QRBwbSCHKJWp1essVVw6E0esALNtRR9LvmapLdG6
      HAlaakV9lqNAyzfmKKNBAE7HAPbDX+KlE5BObqj9WU+jIjYoyfqyiLUSvN6uf1bybbNdR80t
      Eu29jj18fVfXtl+o+JqcFe7k2oRxF0eAZ8IoT7WVKBNA2Q9rhSqBYRNzfc/IV8e5dbOH21YY
      /TE6xsjI+NE7wScVIhIn2ROyI9SmH9PoTmGk2CTlHmLjjrB+J1jz6a3ih1Xnefm3Tc9lvXJo
      TbTgEctfQeV27zzuF5qtZOYy5rb4uf0Yf5+rQI3v0V95yA+vipYjrMPaOKnwvdMw6HNDCIHs
      6AOvSSKZJf7g/yWdVVSqPgsdA+A4a8Oezwxltv++iQ+x5qjNSxwAqFaJNSSx/hvIXdrOxndB
      qJZZdzJgSgugbMQmvFPGGL6hR/iDb+ZArAYalrP4jnPEJtAyzkQUSsDTRmj2LBsF7QG/9T/D
      s63lg4YQApwoAujsH+IPX6swPV5jcvIR07UI96sx3GQGMDjlIoORBkWiLGTaGfG2v4qtWhs3
      VQJjiFUhfv72c/KrCjgCXta9QGwzIMWpLvDOZacl/GBMKPjjT+eZGF8gm00evQI4grYmCeh1
      FNVAUw4MZ2MWrjZMNAO6HIktBBPNgP6IwrA2Y3zUmE9eZnziZzwuJLgfv83vd93he1mLpbkZ
      IGy+6OzN06h7/Kc7YzxJDW5ao74Z1gi6MYhmM6xxtyyw21q2PI9IduC5yYVPEvX5TtDhzZPP
      xleCBAKJ52oWFyq8++4NgKNviZRCkFBipQHIlmH8XxDWkRQ8jQKSSuK3pdXdA6gd3xPsKHdn
      M5xJVsGJ8fVcgkjUpncwR+9gjo7ekKs/GrP5w9eiRJbmwXPJzz1B1dZTmbeiOoUCcmICsVhE
      lEo4c7MkRkbJmi4yboZ0NYb9dJrofAWaLqJUfGHGGu0HPGkTaA1G0KwHzM4UefRwips3Q66l
      UrlyPHiBdpINPq4ZY6MDTK2MTGYxgc9w9WOSxUd8Wezhh9/UZHORTUOiE+MlRsYb/NZbXYzc
      L/Cfy2fAcQABrgvVBinSOAOXMV4TXZjDq8xjWXHs4asru8dy9Kn+9EuqVhmn5JG69M0DG2l1
      nGB8D3QQchMJgakUMIGHzHThVBf4J4NzdCctHj6YIptNEYs59PW1WkENFArF46EALwqM56In
      H/CD82N8MN0HkTi/2TtKZ/dqFnYz5zXwDT/6RZEnmWFwPaKPnhK/8q1dDSTxpx5RFPOISpXs
      mTeR8eSz33TCYZo1THEeVZzG5M6gqyVUrouu6jg/eMWmvyvJ40eTXLt2vq3CtvVeYzDmGJhA
      LxKE7ZBIRZBS8VbfDAWy/P3EIJVSawjhFluYsgTfvx5BFgrIpUWiQzd3PY1HZnuQtQa6owO/
      OI3xPYKFKYw+2nzJgUIqZGc/5pW3MLle5PA13kzD7/UnEFWHydEm8zMu09MLG94qhEDKzRhb
      T7EnNPIX+H8Kb3F3Lsc199cU0xf5yd1Ya9LM1sPx0rko30gsEqsWEXL3sQkZSxA3KTAG7buY
      hSlMYQ49cX+vl3RsIezISlOPUBaXHI/v9DlEHId6o0690UBIcByLr74aJfA3Bk1OFeAAIBIZ
      JuwLDHWDs/iEQuoCH35aD5VgRf7Xm0KCb93u5L99L4+MPB/fpnP+FtGpJVQsg8j3IJTCaI2u
      nMwJj7uCgW+nG1gCFovz3Lrdx63bfXznu9fo6spx7lwff/XXv9qwG5wqwEHBinB3OkFf7Uu0
      sLgb/00+/LxBo+5Sr/ssLVZo1H1cN8BzDY26R73u8nR0iWz8+So3hZAkr38Hu7MfgoDI/Cgy
      142ee3qoY26PAq9EPPJ2y9zbZJOtVBrcvn0FIQT37o2hW6bhqQIcEEQ0wXjXexST5+mq3UdE
      YtxNfJvPH2qajSZCCGq1Rij4jSaNhotAUq9p9NN7u/4+XZjFmnlIMPpFOJIqGse7/C4ilQep
      0EuzGK95AFd69IgJzR/laygBpVIZZW/UAMuSNBpNenrynD9/hpGRJxQKlaNPhO0Exm2g3QYq
      mT3qU9kdhKCQvwq+HxYzWw5j9m3Oe3fo6Iqhg1Zz/XKLpDaoZBaTe33HMV+jNb1P3iftGOoN
      j+9cTtB0C7w/8mvGnUFkKofqPYsuzhFMPUbmexGJ9LoOqZON23F3JZE6tzjDrTeGNxwTjUZw
      3SUAbNvi2rVzPH06e0IUIPCRdgR39EtUIo3sPHNiHqAQElrUI8YYioFiZC7Ft7o9lNVW1mEM
      SsFwv+DTuQoivklti1snVXzImViJasMwnn4DtGEqc5GpwiwmkeFPy52ka7Oc75L8zoDL38+O
      8IgeVPcQZmESXSlgFmeQg5dejFxBpUi+9oBHhVAeGm5908MiEZtgXYn14GD3yVCAZQIn5+w1
      /JkxvEefY5+9fqJG9ECrdiiWIFErgYmtLZ8WYTY8l7PpmhhjPv7qhvefqX3J998MH/CHH5cY
      1xoRTSCicciv1heVowk+nrUYH5nin7ypKVVH+YenT3jkDCETGXCOpjvsIGCUYkFafOP17SeO
      CiFoNjcO+T5ZEgRY3YOUavP4Y18SP3fzqE9n1xBS8SQY4HxhgnQ2wjJv5XLHl1KCd/qn+YvZ
      fkjkVt5nfJfhdAVQaG143OhD5NaOQTXGYOplMKB6hliopPmXX5QRMguWA77L7cpH5GLgZPP8
      lycKb/DGkQwm3y+IWJJK8dmMfbB5z8SJUwCEINV/7VAYDg4KS5mr/MVEnjfnP2Z4IEIkarUK
      tgxCSDo6Ivx28yM+nsnjGYvuSJmIu8SVNzIEvubDvx+llnlvw+cKIVZMJxME9Naf4skIi7mL
      yOIMibGPmGou0XOlBwHczDYYmbzLkkriVZaIdQ6G9OeR2JH1ED8PngaZTcmI1yMS2Vjsd/IU
      gL31iB4XeMke3te/w8+/nOR21xT98SL5jgitskX6+yMMDNRWfISFGcX4RwVq1SbZnlcIIn3b
      9ogJpZhxehGNKkYH6FwfpfT3KUvJ7MJTAoYwaQNpsGslrGgCmelESImuFDH1CjK7N2r0/YIu
      LSDTHRjf27Ri1ZbtDHpb35XGi2ACvUgQUkLHAHf0AB/O14g8esqr6XGGu3yKFcNsNc5wp0dX
      p0Ot6BKNR0gl4/xsBkxkGhl4CEsRpLsR0Y1T4cl0YTJdq82XrUaXoHMo/L2deSGRWT2vRBoC
      f8U8O2qIWBJdmIPAQ3Sc2fDvqcITPvssglSSjnyGvjP5TXYEgW1LGs0GTsRqvSJPi+GOG4wx
      UC2GjTZOFFErcKv5Pt+6NEBXd5b5uRJLi2XOnQuZnINA86uPx/hJeQAxsH9jS43bCHeBvRBT
      7de5NOuY8iIi27VhKo1dmOJPrpXpzocLwJMnM0xOzOM4NkpJgkCvFMLZjsXVq8PIFq9mrdY8
      3QGOG4QQ0JbvMPEsn4j3cJ4+4FJxirmZJZLJKK7nMzNdoNFweWU4zycjDRb2ccUWTvTYZI+F
      Ew1X/i1oKBu1BnOBRz6fZni4h2Khys1bW0+vDIKATz99RDIRPd0BThKM1yRTHOOMU0NOfs33
      fvMKXd1ZKpUG//zDKKJzIKyP30F4+FlOozEGU1oIC85iyWObMzBug3Of/zsGupPMzxf5/T94
      m1q1ibIUvb25tiPD85+eXuTB/QluvXaBVCq+gx1guXrrmN6AlwnCjlDqfIUSEFVnqJkFhJAU
      S3WwM6GQPkP4ncJTUvMjzKcvoQ2IbDc40ZB9zQ6npwhlYapFRDx9YPMD9g3KYrrp0G8MZ8/2
      8nRsDiFgaanC/FyBaq3J229fAQy1WpPpqUXeeff6iln0TAUw0ArPnSrAcUIj0cW/edDk9yYe
      sFiuI2Ib0/8r8JoMVEc4mygSZYkvZJofdM6TjwT8dNFljAHQGpp19OTDcBqmMZjyIqr33LFe
      /ISyKPde5aOZh/zhQJxXb5xdI6ujj2eYnFwglYozNbXApUsDSCkY+WoMz/efrQDL7MbtMK26
      3pOcQHkR0IjmeDJf43vvXmRx5CmfBolw9fbdMJraWr17yyP8d+/41OsWTx+mcKo237jWiVKS
      wUqDpcI9AmnzybTm4uUmufQSf/7zaQrRLrxjLPzLsM/fpHb2Op9UvmS4XGf86SzJZJyh4W6G
      h7t5//0vyOdT+F7Ao0eTBIGmVmvyzrvXns8HWO4yOlWAo4cJfDJLj7jZ+IKinWcx2kufWaBZ
      b+ClunnkpvjHw084259gYb5CaUGw5MV461oXliWR2zzDH78/xq8itzYPsR5HGMOl8b/jv/ne
      OaamFrBti96+PL/+4B5vvnV5ZQKPUpJPP3nIa69f3GU5tDEYrRFSngr/MYFQFsX8RX7qX2RW
      J/leb5l7zRyfWpfoKD3iW+oOw/0hNUi+I0G1UeLdm73PFH6D4c3zCX5Pf0BH9ekhXtEeIASz
      kV5cNyyNGB2dYeSrMcrl2sohlqVa1PSh8aN+8D/9s/+tpHcozO3kr8X5k7MyvOAQQiCyPVSc
      LJ/PK9xkNyLTRcNt8ntvxlcem0BiWYIH98eZm1skFosTiTgsZ5/bPhGAkZExXr0+RLI8yaOy
      QxA5/o329UiWL0YLpBrzvHn7PE+fzHLufB/p9KqsLiyUcCI2qVRs93mAFQdjG0auUxwNRCSO
      jsRJCI26/wGiu4dGo0YsolCWRAhJLp8glY5h2zYP7j2m2fRJRNNcu36u7ZMMvhcQT0RJJKLc
      ut5P3/w8f3N3lHg6ScPTjEeGqUUyW57LUUFYNkv5V/irei/VkTF+6/UL3P18lI6ONNFo6BM5
      jkWxGOY4njsRdlgmkDEGtD5RfJVHDTV5n8yZIXj8GcU+hU5FQLRi+3q5CcelfzDH7GyRfCrX
      ogkxK2aRNoZPRxd5MFPmj37rVaYn5viv3xkkFo8wMjLGb3ff516tm7+d7yawjmFtVizFPwSX
      Gb/zgPOuywdfznKvkWWqbuFpRVdgSM6U95YJDqNBGnFA4zahFYWSEtOohXXvp3gmZPcgwYNf
      YymF1mDbYQm1ZVkIIfB9HwMoJchk4xQWy/T0ZimX6/zrv/oUO51k1JOovkE6l+YJ/AApBbYT
      iks6FafeqNOnx9D3PsVc/v6xpFUUyuJx8gqPgosgFcIR0OozmuUCs+y1GM5zEfbBX7gQAk6F
      f8coqDjFodd4LfiMwaEYukUpKYQAAQ6rz0wom4WZGsYYUqkYvd0ZPlIpVKsxvzciUZbi4iv9
      PBmdYb7coFyqks/bfDzn4/V1IKpF1DGoGdoK22XG96YAloUuLhxa2azRAaa0eGzKdI8zOha+
      4He+G12dQrCuUrjR8Pj3/zBBOVCU58tcvjRMve5ScDUivSoW95rwyRdjfD5b5eFCFa+zExPp
      wBQ1ImmHY10ffoCMffdElqnvTQGW+Sl1cKBm0MrXSYV4SYXfBD4064h46pnHDs38mh++leLL
      T8exHI8zAznSmbUNLoVig/szTayb1zBdHv/ib0aoS4Xp7lmTSfXyef6s7CPScUiH936NLmmN
      WJzD1KsvsAIYEwq5slbyANBq+M50QLNxaqIcNL74GUbZMHQNkcptfVyjwncvOeRySV5//SJC
      CD75+BHF6gRvv3NhpRQ4ErGID/TgAsK2qfVt3VMr7K3FxNQaEFEE07/Cm+lApjpR2Z6VPu7j
      jp2FcoRYtaPWpcaFkCBlWD/ubey4OcU+4ZXfQFx4DeztWeM6qhOc60+vDNmWUiItwys3evjo
      zih+ix4wl43RZWrbfdSOIJJx1K3rqN48VrSIyhYJZn9B87O/wbjHn4do38qhjdZhKe4OowHG
      a4altqfYV0SWxrld+5Df/e2bzM0VGJ+apaM/JO2tVZpMjRWRSlAru/y8kqTatT2bwvPClKsE
      D2eRZwYxOoZw4ohIApXvOZDve17sWzBfSLm7UJjlYPTzT3gxvvfc732REQhBNJVkYaHE+PwE
      Q1dSJFLhQhNPRrhwrZtzl7tYXKhSFgdX6iwcG+vGMKrbRvV4yFwR1Cje+J1NGepMsDNmh/3G
      oXaEmcBHyHC8ETqAvZBbnTBOoMOA0Zo3Il/jmAr3H9W5cGOjr/Dl/QJ3JjVzqg+R2f9M7sr8
      gzaC35Xe42gEGQV//lOE6EamO5Atp/6oOJ4O9VuXL1LAngR4K3aAlx1CCApejG+8HrJLGNZ2
      fi0t1fnr6RiiM7fvpLDPmmPcDivvYPQi/sxj7P5vHmnTjWTqAaZeaeftPvY4Ff4tIARf29f5
      1UhAq/ZhTS/Hh19XIL2RcvEoIKTE6kwRFKaO9DxkUK8S3P+I4Ktfohcm9yWSs51tb4zmbPU+
      ucr4nr9ntzCB/+L7DrEUH7jXmZxzV/hTjTEEgWa8IhHWMaqpUgqC/Yscmi14QbeDlGdfDesk
      es8RLEwjv/jpnh2SbZNizQa3ew3nncMf2iCUhamXX3glMIk8f/c4t2Ysk1KS9y5Y6FooJOu7
      /PaCrcyf7SbiAOhyHZnu3b/zeA7OUymkwnr1m8h8L7FUEpXtJHjy1ZqDTOBjgv2ZySuicf58
      soMP9blnH7wLGKN39FBFNIlemt3X7z6OmI+fZ2KqjhASo0NTqL83zrfEBL3FSeSTJyvHqnKZ
      W7V5YnO7uy/1mk+96qN1OOhPa/B9Q7Nh8NztZ5MFXoDRXStO8FFhjS/kdZ/HG76JpcRKEsMY
      g1mY3I5xbvdIdex7ZacQckeN+8J2kNmufV0BjyViKT6YCqNAjXpAox5gKcVvvH6GP34rw4WE
      T258lEvlOf7HK2n+8bcukrV395B9z8fzfcqlOrWaS7lUp15zaTabKxNYNtsdjOejS3Hsnot7
      v849Ym0oxnPDsuPhV1fp9ISArkGoVzCx5LbN8KZVdXjYLALt5Rk7wbGn+tgnjMeu8mjs53Rm
      QUlJo94MnU9L8t3f6KK4WOds3yCpVGg63OiIMjFfRGRSW95PgVgxayJRuzWwXuH7AUaHi5Cy
      FFJubRrppQB74MqxYJtYc5UiGkdmNylr1UGLwntziunV4zY3Q4wxa5xr4zX3Nep02p+8BSJx
      /nbuHJZlkUzFiMUiJBNRIhEbISGesimXwnIIgeDbrw3zv97K89uqTGxpEdPY3kF1Iopo1MKy
      BNGoRSxuE41Z2HZI874ZvMezyI5rx4ZmZ2eSIxW6WsI069tqrVBqgzCaZi3sQGpbdWW9RDB6
      9/nOeIcwgY/x3DW+y14yzycVNaeDSjXAGE0s7mA7CttWRCIWxcU6mczavu7OrjTfeeMs/8tb
      ffxXiRrUGoi2/4ANv+8GItl/5HZ/O3amAL6HPT+KLs7t+gtEJLT123cGk+5Cnbux68/aCUyj
      ij9+H9Ooge+u8V2Wo1MvlSIksvzdZD+NerDS9iiEQCmF34BYzA5fXxetSaXjnB3qhHJ5305l
      Jxz+h40dKYCwbFwszNzOYvemVkI/+GTtiy267f0OQRqjMbXK6guWg+q/CFISzE1gKkV0tYjx
      PUwQhFnkQ+hdOE6YTl7mX38xzAd3azQb/oqDqiyF64aLwWZKkE7H6W1UcMbHMd7zhcbbPzMk
      WTu6yfXGbWx4bcfl0Ori69Bqnt7yCwKf4MlX2BMjmFqRYH5i9SMsO/Qj9jGLawI/dMoCF+M2
      MW4DYdkIIZDRBDLXHXLd+36rpFshrNaKd0TFV0cBIQRufphfRL/L//VpLw+feuhAY7RoMSUI
      jDahYphV59WyFP/zD9/gn97ug0pl+y/ZBstKYDwPGTk682ezhp0de4/CspGpju2tPil5NbJA
      ImYjL76BsCMrLHKwzEqwfyuAUBYIgUzlQVmYwtzq5wuBSGbDkT/pXNiv4DZDpWn1Nxi3+eKH
      Q9sghKTWeYm/WbrOrz8pUZwPV0QpBFLKlQjP+nsyONDBP0oHu45bLAv+skKZqodIHa+Ovi0V
      wJiNN0LkugkmH24pxEJIvki+ylJ6CGM0IpZcyzGvg5CFuP076s9eWUwQPFNxhFLI7sE1TvhK
      FaKQ4WAFpcLmneXVv8WG/LLBT3Yxbs5y8+Y5pqaWVl5fvl/LSjAzvcTdz0cZfzrPZD14RtRy
      43ii9Y6ycRXymHUObrsDmCdfYOqVlRoaIQSysx+2mTguk9mwzDWRQdiRNQmv9TaYEAKxg9a5
      5eiSadZ3ZboYrVfpHG0HpGpxDFmr3/+ShlCLniKVSlCtrH0my47q55+NIqTk1RvncCI29+br
      25Q1PNuxNZ6PiHbvw5nvL7Z8+kIIRO95Li3ewSpMYSYfYspLu5ogaIxeqfk3xkCt9FwZYOO5
      4YOJxHZVNy6kbIVtzeo1KSt0iH0P4zVPRNveQcCXDpZl4W3i3Pp+QCwWobs7nFTT3Z2lK7G3
      5GFQCJAd21C47xACSKudB2CfldzeVppENM7XnW/RNXmHpeQg/i67/tujLUKINcOcd/U5y5PW
      fXfDjKiVFX4b5riV8KcxYTTKbSLiyfD3Zv1YhucOGsIEKGkhEJRLdUa+HiUWdfB8TaVS5dzZ
      gTXHp/EpTk1TTySR6XZHdnWBWY/l+6prdaTVuS+7bbcjKfoGFVZ7k7YkS77GFqxQwNhCEFeC
      RU/TH1FMNgPcLTavHfUEG2NgmZntmAlKu9NL4D9XlElXS8jE8aiTPyxcKn3Of/9OjkKhzEcf
      f8033hsmCHzmZsv0nskycneWa1cu4Kybrfsffv6QjyIdrIrbMtZKmC5V8Ger4CSRyS7svkv7
      ct6OgG5HMe0G5CxJYKASaFKWxNMG34AjoRYYlBBEpUAJmPc29yF3ZE8IISB2PJmg21cV0zKP
      TODvylTaKjNpPPeFrRuKqVZo0kBHZ2LFWe3pC9skL1/v4uHDUQgsLl0eRqkwSvRKR4zpJ9NM
      5Htaa2Hrc1r/100PigJh9eFcO7/vO2vGknjGEBjwDVgCXAOBMSQtyXQzwJbh1SgBDW22NZde
      qMbalajPbtst1z2k5Qk4vMCdZ44VXuLjJ0+5dqOfQLsI2VbuIATnLnbg+wFffPU1mWSWs2f7
      uHG5n4mlBpPAmlXfGIJqE2n6UIN7t/W3wlzbSr7kr/5c8A2FFuVL0Q/Pqxk8O8L3coZAnoHl
      6NCL6hcYY8jaYX2QsiShIBvkJiQFlqV45XIXpbaSiEizRGpheqXhpdV9DI0UqvPghP8gcOIV
      ICoFPY4kJrcX1uV/z1ovplDvCtonF5dobajXm2gTtBro2+3k1YK36akiyXgKYwwTE/MMDKWw
      grUlLSbQSPvgYvybPbWdFrRsd9yJVwCn5f03tSEqBX2OIiYFEQlJJcgS4AjI2eGlZixJl33i
      L3tPULUiA/kIjx5PcPlaD9r4gFlpKlpf55nLJ/BFhc/ufsX0/BQ//qrOUucAgo2VvweF/kgo
      xgkpyNsSCeRbzzGlVs8kpQSWCAX7TOs90dbiF5NiQ1j0xEtCALga4kqQtgSuCTfkhJREpMBY
      FhEpKLVCZWX/5cv8rkefWSAWVzS9KrYjNummE21/IBaLMDTcSa4ryf897bDUMxBm1WmVORgw
      ZRfZdfZAzjehwmiOLcCWUPE1USmoaYMjwlBo2hJEBESkIGdJpAgXRQhlwxHh3+tx4p1gVxuM
      gJo21IJwF2hoQ1MbEkpQbTlCloDAQMHXPMNaeuEhTUCpWCObj7Ecxw+nxmx2Y8LXatUmf/Zx
      Cbe7v/X6qrkUVJvI+CXkAc2Mi0nBnBegRKiUBoNsPc+4EhjCsKcjRSv8Ga7sgTFYLUUwhPmB
      9cHQE68AngGvVc+jCRUBQrOo0hYF8NoWfv2SbwIDsQYLixU6+2yEYJ3wt9f0rN6or7+a543O
      BD8plpCZ1ZxJPVCIqkNs6OAGZLTH8Buth+e1nm1dsxL9cddFfdzWbl9qvT7tbuwDOfEm0Cl2
      D88ICoUSsVi0Zf5IQqGXCCRGC3QQ/gGJ0ZBOpvhHb17kTy6l6S3Oh1xDRuAtNYl0Xz7iK3p+
      nOgdoNdRGAwz21BwxKSgrg15W7LkhbZj/SXfAqqBjUBSKddXVv7lJhkpJcaE88SCIEBrjTGC
      5Sa6oYFO/qQ3x//xt/f4WqdJdd5ARg63wlPCBlNmL591ImGJ5T/hA8xYgo5WVKDDlqRaDk9E
      ChRhdMAQRgQEYU1J9GV0BoyhKxLQ1ZWjVGyQSMYIggDLtojFosTjMWKxKEopHMchkYhRrTRJ
      tc3ZtSzFYNzCUh2HLvx9jqIvolCEwhtpSbAlVgvfbBFGByH8O7KNlO+BodaEYS9lHQnPf1IJ
      lnxNLQgdnZQK60IE4c0oBAZFmA5XApY8jQSkCHcFV4cO9MsG49Y516VJR+PU3CaWBZlMAmUt
      m0CC9si5wWCEpFgLaDY9IhEbDCyRx+k9XF4fp+XQWjLcAXpahXFgGIwqXA0TzYCcHS5uY42A
      TkchCF/fDM+vAEKAkCTu/oTa+bfhkKcE1gKzUuHnGygHmnoQevvVwCBE6OwWfI0gdIgNUPQ1
      vgnDaS+f+EOktsiZzgQP7j/l4tWwxVVZ7U7vxqaW/jMZ/uJOnb/6ZUDebuAbwXji6r5ype0E
      GogqgdeK6gjCBU0AjSB8tpIw2rPsLDdasrAV9uQDCCdKsn+Q/NLnjNm/cah0F+vLW4tt8f32
      6M96KV8+rPgS5gOMMbyenCcWy6BNgNhgAoZlDeur7S1L8Z1Lkn/1dZZyugPYX6LAncI3MNm2
      kk+1+X5TbRGe9tV+0d/eW9ibDyAEMx3XGb/3EP3J//dStheeKJQXuN6pmZhYINcZ2VU/dDYb
      44p4fIAnt3/YTd/5np1goRTq+rv802/3IKYeECtPo8rze/3YHSOhBN2OPLne/CHinDfG0JkM
      tVqdru7UFskvvcri0LZ9LpVcHjN4iGf7fDA6gF3QpO+L3KRsw5XLA/yzbwr+h4sLBIc4LTKp
      BPXAEJOChBJ0rtT8CLpbPydaBXMAOUvS13KMXiYYY/BRCBk6vfO6EHwaAAAF0UlEQVTzlW2q
      XQ26VRjXbHrce7jEv/8qjps6XgPuNoOQCrGLjPTe8wC1Ir97Llw1mm7Ajz6uQt+1PX/sTrDc
      jBdXgllX0+NIZlt2YVLJFUcoaQmc1sO2xWrm+GWCEIIlkuhAMzE5x6VrWwcttNb86Y/HKHdc
      okQOk7uFyLyYZGK7VoDOyjSxmUdYkSizMk5Hdy8fP6jRn7WZXGgw0fPGodXRL1eBeiGfE0U/
      rP8pB4air1dckoY2VM1yWlwvV6+/dOhWFRAJkBprm0kxga8p5S9R7rwKHI3Dux/YSUffrhXA
      c5sEc1PMjT3m+rWzjH/+U8rlMu9d/i1+MptBZA43udwezWnP8LZHgtqPaRwdM9+RwhjN1ZxL
      s+EQj2/+jEYeljBSknIMntxmGv1JwQ46A3ctrTrbQ+LtH3DuwhPeu9BAB5p/92GFvxiLM589
      d2JXixcexjDyYI7ixAT9A5vT2oyVHT5Qb4DvIzqOF4HV82AnLBQ7doJ7qtOkvvop2WSCkp3g
      bM6jr7cDFwdx5W2a3Vfoj0myi0/2dNKnOCA0alSWCnz6qERiC46f4VSd3Bd/ecgndrTY8Q5g
      pTvoijxk7Ef/O1cv9nHrnfPMzZX40Z+/TzL9JU4iRcPzqSc6IX+y+kJfBqhmBZ3I8Y2rUeQW
      K2PTFyx1XkNEdsf/dJKx4x2g/vQ+fr3Md9+5yB/+7g2EkPzs83kyQ6+QGThH9vwVrFSOeMfx
      Ij89RQiv2WS6IhjqSVAqbqQJB/h0KYfov7TC5vcyYMc7wGIszx9c8rh0thNjDP/2swYPB76z
      9qDL5/f59E6xHzCBTzA2gjP6EU/Pv8r4+CwXL3Uh1aqgF4t1Chz/OP9+Y0cKYHyP25WPuHT2
      JgDFYo1H5nCL306xB0gFUhFRcP36MKmMs0b4P3lQ4y+nhzDZ/ZvZe1Kws72uUaEqY4xNLBFo
      zX+820CnOg741E6xXxBeg6vRBfrO5Eln4lht1Ahaa96f6cB0DOwobPiiYWfUiMkcI5F3+fIv
      /5roxRt4nTdeWNKoFxJzT6k4ef74j67g+3pNebCUknd6i/z1xChB5/BL91x3pvItqkB5+3fw
      dskQfYqjh+kaYvLRZ0xOKBYXLQbP5tf8+xsXHLpj4/yf052wg3kNLxJ2ZAIZAGVvOmPpFMcf
      Zuwr/IefsLhQxnU9HGct56nrBvx0PAWH3N54HLBzduht+PdPcbwR1Cp0dmboH+gkoLHGBNLa
      8Oef2jxK3Xwps/gHEvDd71Gop9gbVCJFIhnl87sPOHdxbfCiXG7yyH/5wp/L2JEC6PLSsw9q
      w36OQj3F3mGkxeRcDduyKBVXm0UWC03+9ItOTOb4ze46LDxbAYyBHUxyPMXxhewdJgg0jh1h
      9EFhpUz80WSDUu7ilpGfYGEKPT+BrhTCTqsXEM/2AYRAdh//VrhTbA2jDX40w507D+gfyHNm
      MIkTsejLWzBRhHhm43uMxr//MYPVhyjb4mn2OtbN947g7A8Wu858mFoZcYjsD6fYO0QsieoZ
      Ilb4mngsQmHex3Yk//DxBHY2gTf02sb3CIk9dJmpQh6DQV156wjO/OCx+9TfATEAn+LgIKRE
      dg+xMHGPTLnOvXuTTFYEP/z+df7NL8tsFbKQZy5g+s6D0Wsmfr5I2HUU6GUdLH3Soc5eQ+fP
      sLBQIpWKURYJnk6VeCUyC83qlu8Lx0W9mMIPJ5gb9BS7g1AW1q1vU1IZfvGLEbyxezQKS1wa
      TvL7qc9R9cLhnYyBDhkci8bsHc0JPsWLAWMMeE3ML39MtjpOd2cKyxacPd9Fwbe5U+qlKaPI
      oYNn9ZAmJHLVR5x+e/nK/15iCCHAicJv/jGFmSdUR36GW60wYuKYS28jzqYPzSTQx6To7lQB
      XkIIIRC9Zwl6zyLdBv7UY6xE+tlvfAFx6gO85BBOFGv46lGfxpHhVAFO8VLjVAFO8VLjVAFO
      8VLjVAFO8VLjVAFO8VLjVAFO8VLj/wcJIN3WRvxiVwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQzElEQVR4nO3da48b133H8e+5zPB+3Uvk2IrtFkGcxCjqpg9aFOizPi3QN9oneQlNigYo
      kFZJ04tsObIl2dIuubyTM3MufTDctexdO7vS7lrc+X8AakdDcnhAnt+ZC+fPUTHGiBAVpW9i
      oZIpsStuJAAhhJtYrBDX7kYCIMSukACISpMAiEqTAIhKkwCISpMAiEqzl3mQz9d89nzMfrvG
      k6Mp+706a2fQxZKkPSRbL+jUFKp5SL+d3nSbhbg2lwqASRvUjGI+n7NcLGg2UlQoiLbOZj7l
      +fERrqNJYp9OwxBCkC/DxE64VABctuSLL75gMOhTs5YYCnKvUZspaWvI/cM+q2iopwZjDMDZ
      XyHeZOomzgXy3ksAxE6QnWBRaRIAUWkSAFFpEgBRaRIAUWkSAFFpEgBRaRIAUWkSAFFpEgBR
      aRIAUWkSAFFpEgBRaRIAUWkSAFFplyqIiSEwPpkw6LX57NkLDvotVk6j3Yq0NaDI19StgrRN
      s3apRQrxRrhUQUwoMh4/e0HczCiSDqkOEDxKW7xzjE7G7HUU6eADfrjfIISAUuo22i/Ea7nU
      cB2C48tnTzg8OGBx/IJGr00MGuXmJM0Bg6Ylw1JTSkoixU6RkkhRabITLCpNAiAqTQIgKk0C
      ICpNAiAqTQIgKk0CICpNAiAqTQIgKk0CICpNAiAqTQIgKk0CICpNAiAqTQIgKu2SJZGe4/GE
      /b0ho9GIeqK/XhKZrWkkiljr0JKSSLFDLh2AxWpFM4FHnz3jcNglBo8ylrB4xvH4q5LI+rYk
      Uq4SKXbB5UoifcHzZ0/x+T75akbWSnFRo92CpDlg2ErIsdSlJFLsGCmJFJUmO8Gi0iQAotIk
      AKLSJACi0iQAotIkAKLSJACi0iQAotIkAKLSJACi0iQAotIkAKLSJACi0iQAotIkAKLSLlcR
      FiNFUWCtYbPJqSUGFxUqerRNicGjFaAtRsvF8cTuuFxFWJHx8R+f8O69PR4++pxWu45zERUd
      JmkwGh1z0FUkw59y/7BFjJEQwk23XYjXdqkAKGNJVGS5XDLYO8DnS6KJaBIAOjVNjiWlXFuc
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
